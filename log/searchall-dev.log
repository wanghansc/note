2021-01-25 08:35:08.694  INFO 1856 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 1856 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 08:35:08.699 DEBUG 1856 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 08:35:08.700  INFO 1856 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 08:35:08.877  INFO 1856 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-25 08:35:08.881  INFO 1856 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-25 08:35:10.470  INFO 1856 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 08:35:10.557  INFO 1856 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2021-01-25 08:35:11.043  INFO 1856 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77ca5dd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 08:35:11.652  INFO 1856 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 08:35:11.675  INFO 1856 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 08:35:11.676  INFO 1856 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 08:35:11.824  INFO 1856 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 08:35:11.824  INFO 1856 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2942 ms
2021-01-25 08:35:12.065  INFO 1856 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-25 08:35:12.227  INFO 1856 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-25 08:35:12.289  INFO 1856 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 08:35:12.371  INFO 1856 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2021-01-25 08:35:12.373  INFO 1856 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2021-01-25 08:35:12.546  INFO 1856 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2021-01-25 08:35:12.779  INFO 1856 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 08:35:12.985  INFO 1856 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 08:35:13.660  INFO 1856 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 08:35:13.726  WARN 1856 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 08:35:13.868  INFO 1856 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 08:35:14.202  INFO 1856 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 08:35:14.251  INFO 1856 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 08:35:14.254  INFO 1856 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 6.52 seconds (JVM running for 8.612)
2021-01-25 08:36:30.276  INFO 1856 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 08:36:30.276  INFO 1856 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 08:36:30.285  INFO 1856 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-01-25 08:36:30.364  INFO 1856 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[]}
2021-01-25 08:36:30.367  INFO 1856 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 08:36:30.555 ERROR 1856 --- [http-nio-9090-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "class path resource [templates/index.html]" - line 56, col 34)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]" - line 56, col 34)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseStandalone(TemplateManager.java:302)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:588)
	at org.thymeleaf.standard.expression.FragmentExpression.executeFragmentExpression(FragmentExpression.java:391)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:89)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpressionParameters(FragmentExpression.java:529)
	at org.thymeleaf.standard.expression.FragmentExpression.doCreateExecutedFragmentExpression(FragmentExpression.java:471)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpression(FragmentExpression.java:426)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:359)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:110)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.attoparser.ParseException: (Line = 56, Column = 34) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 80 common frames omitted

2021-01-25 08:36:30.561 ERROR 1856 --- [http-nio-9090-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.attoparser.ParseException: (Line = 56, Column = 34) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseStandalone(TemplateManager.java:302)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:588)
	at org.thymeleaf.standard.expression.FragmentExpression.executeFragmentExpression(FragmentExpression.java:391)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:89)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpressionParameters(FragmentExpression.java:529)
	at org.thymeleaf.standard.expression.FragmentExpression.doCreateExecutedFragmentExpression(FragmentExpression.java:471)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpression(FragmentExpression.java:426)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:359)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:110)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 08:39:17.979  INFO 1856 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[]}
2021-01-25 08:39:17.979  INFO 1856 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 08:39:17.983 ERROR 1856 --- [http-nio-9090-exec-5] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-5] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "class path resource [templates/index.html]" - line 69, col 62)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]" - line 69, col 62)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseStandalone(TemplateManager.java:302)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:588)
	at org.thymeleaf.standard.expression.FragmentExpression.executeFragmentExpression(FragmentExpression.java:391)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:89)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpressionParameters(FragmentExpression.java:529)
	at org.thymeleaf.standard.expression.FragmentExpression.doCreateExecutedFragmentExpression(FragmentExpression.java:471)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpression(FragmentExpression.java:426)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:359)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:110)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.attoparser.ParseException: (Line = 69, Column = 62) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 80 common frames omitted

2021-01-25 08:39:17.984 ERROR 1856 --- [http-nio-9090-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.attoparser.ParseException: (Line = 69, Column = 62) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseStandalone(TemplateManager.java:302)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:588)
	at org.thymeleaf.standard.expression.FragmentExpression.executeFragmentExpression(FragmentExpression.java:391)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:89)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpressionParameters(FragmentExpression.java:529)
	at org.thymeleaf.standard.expression.FragmentExpression.doCreateExecutedFragmentExpression(FragmentExpression.java:471)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpression(FragmentExpression.java:426)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:359)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:110)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 08:40:08.781  INFO 1856 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[]}
2021-01-25 08:40:08.782  INFO 1856 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 08:40:08.785 ERROR 1856 --- [http-nio-9090-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-8] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: An error happened during template parsing (template: "class path resource [templates/index.html]" - line 80, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]" - line 80, col 49)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseStandalone(TemplateManager.java:302)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:588)
	at org.thymeleaf.standard.expression.FragmentExpression.executeFragmentExpression(FragmentExpression.java:391)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:89)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpressionParameters(FragmentExpression.java:529)
	at org.thymeleaf.standard.expression.FragmentExpression.doCreateExecutedFragmentExpression(FragmentExpression.java:471)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpression(FragmentExpression.java:426)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:359)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:110)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.attoparser.ParseException: (Line = 80, Column = 49) Incomplete structure: "<a href="#" th:href="@{/types/{id}(id=${blog.type.id})}" target="_blank" class="ui teal basic label m-padded-mini m-text-thin" th:text="${blog.type.name}>认知升级</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="five wide column">
                                        <a href="#" th:href="@{/blog/{id}(id=${blog.id})}" target="_blank">
                                            <img src="https://picsum.photos/id/1/800/450" th:src="@{${blog.firstPicture}}" class="ui rounded image" alt="">
                                        </a>
                                    </div>
                                </div>
                            </div>
                                    
                        </div>
                        <!--footer-->
                        <div class="ui bottom attached segment">
                            <div class="ui middle aligned two column grid">
                                <div class="column">
                                    <!--basic 颜色在背部 mini再小一点-->
                                    <a href="#" class="ui mini teal basic button" th:href="@{/(pageNum=${pageInfo.hasPreviousPage}?${pageInfo.prePage}:1)}">上一页</a>
                                </div>
                                <div class="right aligned column">
                                    <a href="#" class="ui mini teal basic button" th:href="@{/(pageNum=${pageInfo.hasNextPage}?${pageInfo.nextPage}:${pageInfo.pages})}">下一页</a>
                                </div>
                            </div>
                        </div>

                        <div class="ui segment m-inline-block">
                            <p >当前第<span th:text="${pageInfo.pageNum}"></span>页，总<span th:text="${pageInfo.pages}"></span>页，共<span th:text="${pageInfo.total}"></span>条记录</p>
                        </div>

                    </div>
                    <!--右边的top-->
                    <div class="five wide column">
                        <!--分类-->
                        <div class="ui segments">
                            <div class="ui secondary segment">
                                <div class="ui two column grid">
                                    <div class="column">
                                        <i class="idea icon"></i>分类
                                    </div>
                                    <div class="right aligned column">
                                        <a href="#" th:href="@{types/-1}" target="_blank">more <i class="angle double right icon"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="ui teal segment">
                                <div class="ui fluid vertical menu">
                                    <a href="#" th:href="@{/types/{id}(id=${type.id})}" target="_blank" class="item" th:each="type : ${types}">
                                        <span th:text="${type.name}">学习日志</span>
                                        <div class="ui teal basic left pointing label" th:text="${#arrays.length(type.blogs)}">13</div>
                                    </a>
                                    <a href="#" class="item">
                                        学习日志
                                        <div class="ui teal basic left pointing label">13</div>
                                    </a>
                                    
                                </div>
                            </div>
                        </div>
                        <!--标签-->
                        <div class="ui segments m-margin-top-large">
                            <div class="ui secondary segment">
                                <div class="ui two column grid">
                                    <div class="column">
                                        <i class="tags icon"></i>标签
                                    </div>
                                    <div class="right aligned column">
                                        <a href="#" target="_blank" th:href="@{tags/-1}">more<i class="angle double right icon"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="ui teal segment">
                                <a href="#" th:href="@{/tags/{id}(id=${tag.id})}" target="_blank" th:each="tag : ${tags}" class="ui teal basic left pointing label m-margin-tb-tiny">
                                    <span th:text="${tag.name}">方法论</span><div class="detail" th:text="${#arrays.length(tag.blogs)}">13</div>
                                </a>
                                
                            </div>
                        </div>
                        <!--最新推荐-->
                        <div class="ui segments m-margin-top-large">
                            <div class="ui secondary segment">
                                <i class="bookmark icon"></i>最新推荐
                            </div>
                            <div class="ui segment" th:each="recommendBlog : ${recommendBlogs}">
                                <a href="#" th:href="@{/blog/{id}(id=${recommendBlog.id})}" th:text="${recommendBlog.title}" target="_blank" class="m-black m-text-thin">用户故事（User Story）</a>
                            </div>
                            
                        </div>

                        <!--二维码-->
                        <h4 class="ui horizontal divider header m-margin-top-large">扫码关注</h4>
                        <div class="ui centered card" style="width: 11em">
                            <img src="../static/images/WeChat.jpg" th:src="@{/images/WeChat.jpg}"  alt=""  class="ui rounded image" >
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <br>
        <br>


        <!--底部footer-->
        <footer th:replace="_fragments :: footer" class="ui inverted vertical segment m-padded-tb-massive" >
            <div class="ui center aligned container">
                <div class="ui inverted divided stackable grid">
                    <div class="three wide column">
                        <div class="ui inverted link list">
                            <div class="item">
                                <img src="../static/images/WeChat.jpg" th:src="@{/images/WeChat.jpg}" class="ui rounded image" style="width: 110px" alt="">
                            </div>
                        </div>
                    </div>
                    <div class="three wide column">
                        <h4 class="ui inverted header m-text-thin m-text-spaced">最新文章</h4>
                        <div class="ui inverted link list">
                            <a href="#" class="item">用户故事（User Story）</a>
                            <a href="#" class="item">用户故事（User Story）</a>
                            <a href="#" class="item">用户故事（User Story）</a>
                        </div>
                    </div>
                    <div class="three wide column">
                        <h4 class="ui inverted header m-text-thin m-text-spaced">联系我</h4>
                        <div class="ui inverted link list">
                            <a href="#" class="item">E-mail: 1561675255@qq.com</a>
                            <a href="#" class="item">QQ: 1561675255</a>
                        </div>
                    </div>
                    <div class="seven wide column">
                        <h4 class="ui inverted header m-text-thin m-text-spaced">介绍</h4>
                        <p class="m-text-thin m-text-spaced m-opacity-mini">这是我的个人知识库管理平台，上面有我平时学习的笔记，以及相关的文本，支持全文搜索，也会分享关于编程、写作、思考的任何内容，希望可以给来到这里的人一些帮助...</p>
                    </div>
                </div>
                <div class="ui inverted section divider"></div>
                <p class="m-text-thin m-text-spaced m-opacity-tiny">Copyright © 2021 - 2022 Wanghan Designed by Wanghan!</p>
            </div>
        </footer>
        <th:block th:replace="admin/_fragments::script">
        <script src="https://cdn.jsdelivr.net/npm/jquery@3.2/dist/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js"></script>
        </th:block>
        <script>
            $('.menu.toggle').click(function (){
                //显示
                $('.m-item').toggleClass('m-mobile-hide');
            });
        </script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 80 common frames omitted

2021-01-25 08:40:08.787 ERROR 1856 --- [http-nio-9090-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.attoparser.ParseException: (Line = 80, Column = 49) Incomplete structure: "<a href="#" th:href="@{/types/{id}(id=${blog.type.id})}" target="_blank" class="ui teal basic label m-padded-mini m-text-thin" th:text="${blog.type.name}>认知升级</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="five wide column">
                                        <a href="#" th:href="@{/blog/{id}(id=${blog.id})}" target="_blank">
                                            <img src="https://picsum.photos/id/1/800/450" th:src="@{${blog.firstPicture}}" class="ui rounded image" alt="">
                                        </a>
                                    </div>
                                </div>
                            </div>
                                    
                        </div>
                        <!--footer-->
                        <div class="ui bottom attached segment">
                            <div class="ui middle aligned two column grid">
                                <div class="column">
                                    <!--basic 颜色在背部 mini再小一点-->
                                    <a href="#" class="ui mini teal basic button" th:href="@{/(pageNum=${pageInfo.hasPreviousPage}?${pageInfo.prePage}:1)}">上一页</a>
                                </div>
                                <div class="right aligned column">
                                    <a href="#" class="ui mini teal basic button" th:href="@{/(pageNum=${pageInfo.hasNextPage}?${pageInfo.nextPage}:${pageInfo.pages})}">下一页</a>
                                </div>
                            </div>
                        </div>

                        <div class="ui segment m-inline-block">
                            <p >当前第<span th:text="${pageInfo.pageNum}"></span>页，总<span th:text="${pageInfo.pages}"></span>页，共<span th:text="${pageInfo.total}"></span>条记录</p>
                        </div>

                    </div>
                    <!--右边的top-->
                    <div class="five wide column">
                        <!--分类-->
                        <div class="ui segments">
                            <div class="ui secondary segment">
                                <div class="ui two column grid">
                                    <div class="column">
                                        <i class="idea icon"></i>分类
                                    </div>
                                    <div class="right aligned column">
                                        <a href="#" th:href="@{types/-1}" target="_blank">more <i class="angle double right icon"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="ui teal segment">
                                <div class="ui fluid vertical menu">
                                    <a href="#" th:href="@{/types/{id}(id=${type.id})}" target="_blank" class="item" th:each="type : ${types}">
                                        <span th:text="${type.name}">学习日志</span>
                                        <div class="ui teal basic left pointing label" th:text="${#arrays.length(type.blogs)}">13</div>
                                    </a>
                                    <a href="#" class="item">
                                        学习日志
                                        <div class="ui teal basic left pointing label">13</div>
                                    </a>
                                    
                                </div>
                            </div>
                        </div>
                        <!--标签-->
                        <div class="ui segments m-margin-top-large">
                            <div class="ui secondary segment">
                                <div class="ui two column grid">
                                    <div class="column">
                                        <i class="tags icon"></i>标签
                                    </div>
                                    <div class="right aligned column">
                                        <a href="#" target="_blank" th:href="@{tags/-1}">more<i class="angle double right icon"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="ui teal segment">
                                <a href="#" th:href="@{/tags/{id}(id=${tag.id})}" target="_blank" th:each="tag : ${tags}" class="ui teal basic left pointing label m-margin-tb-tiny">
                                    <span th:text="${tag.name}">方法论</span><div class="detail" th:text="${#arrays.length(tag.blogs)}">13</div>
                                </a>
                                
                            </div>
                        </div>
                        <!--最新推荐-->
                        <div class="ui segments m-margin-top-large">
                            <div class="ui secondary segment">
                                <i class="bookmark icon"></i>最新推荐
                            </div>
                            <div class="ui segment" th:each="recommendBlog : ${recommendBlogs}">
                                <a href="#" th:href="@{/blog/{id}(id=${recommendBlog.id})}" th:text="${recommendBlog.title}" target="_blank" class="m-black m-text-thin">用户故事（User Story）</a>
                            </div>
                            
                        </div>

                        <!--二维码-->
                        <h4 class="ui horizontal divider header m-margin-top-large">扫码关注</h4>
                        <div class="ui centered card" style="width: 11em">
                            <img src="../static/images/WeChat.jpg" th:src="@{/images/WeChat.jpg}"  alt=""  class="ui rounded image" >
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <br>
        <br>


        <!--底部footer-->
        <footer th:replace="_fragments :: footer" class="ui inverted vertical segment m-padded-tb-massive" >
            <div class="ui center aligned container">
                <div class="ui inverted divided stackable grid">
                    <div class="three wide column">
                        <div class="ui inverted link list">
                            <div class="item">
                                <img src="../static/images/WeChat.jpg" th:src="@{/images/WeChat.jpg}" class="ui rounded image" style="width: 110px" alt="">
                            </div>
                        </div>
                    </div>
                    <div class="three wide column">
                        <h4 class="ui inverted header m-text-thin m-text-spaced">最新文章</h4>
                        <div class="ui inverted link list">
                            <a href="#" class="item">用户故事（User Story）</a>
                            <a href="#" class="item">用户故事（User Story）</a>
                            <a href="#" class="item">用户故事（User Story）</a>
                        </div>
                    </div>
                    <div class="three wide column">
                        <h4 class="ui inverted header m-text-thin m-text-spaced">联系我</h4>
                        <div class="ui inverted link list">
                            <a href="#" class="item">E-mail: 1561675255@qq.com</a>
                            <a href="#" class="item">QQ: 1561675255</a>
                        </div>
                    </div>
                    <div class="seven wide column">
                        <h4 class="ui inverted header m-text-thin m-text-spaced">介绍</h4>
                        <p class="m-text-thin m-text-spaced m-opacity-mini">这是我的个人知识库管理平台，上面有我平时学习的笔记，以及相关的文本，支持全文搜索，也会分享关于编程、写作、思考的任何内容，希望可以给来到这里的人一些帮助...</p>
                    </div>
                </div>
                <div class="ui inverted section divider"></div>
                <p class="m-text-thin m-text-spaced m-opacity-tiny">Copyright © 2021 - 2022 Wanghan Designed by Wanghan!</p>
            </div>
        </footer>
        <th:block th:replace="admin/_fragments::script">
        <script src="https://cdn.jsdelivr.net/npm/jquery@3.2/dist/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js"></script>
        </th:block>
        <script>
            $('.menu.toggle').click(function (){
                //显示
                $('.m-item').toggleClass('m-mobile-hide');
            });
        </script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseStandalone(TemplateManager.java:302)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:588)
	at org.thymeleaf.standard.expression.FragmentExpression.executeFragmentExpression(FragmentExpression.java:391)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:89)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpressionParameters(FragmentExpression.java:529)
	at org.thymeleaf.standard.expression.FragmentExpression.doCreateExecutedFragmentExpression(FragmentExpression.java:471)
	at org.thymeleaf.standard.expression.FragmentExpression.createExecutedFragmentExpression(FragmentExpression.java:426)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:359)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:110)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 08:41:52.718  INFO 1856 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[]}
2021-01-25 08:41:52.718  INFO 1856 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 08:41:52.782 ERROR 1856 --- [http-nio-9090-exec-5] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-5] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "pageInfo.total" (template: "index" - line 50, col 86)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "pageInfo.total" (template: "index" - line 50, col 86)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'total' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 73 common frames omitted

2021-01-25 08:41:52.783 ERROR 1856 --- [http-nio-9090-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'total' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 08:42:58.970  INFO 1856 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[]}
2021-01-25 08:42:58.971  INFO 1856 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 08:42:58.979 ERROR 1856 --- [http-nio-9090-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-2] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "index" - line 57, col 93)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "pageInfo.list" (template: "index" - line 57, col 93)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 74 common frames omitted

2021-01-25 08:42:58.980 ERROR 1856 --- [http-nio-9090-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'list' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardEachTagProcessor.doProcess(StandardEachTagProcessor.java:73)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 09:30:03.256  INFO 4044 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 4044 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 09:30:03.258 DEBUG 4044 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 09:30:03.259  INFO 4044 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 09:30:03.333  INFO 4044 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-25 09:30:03.333  INFO 4044 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-25 09:30:04.061  INFO 4044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 09:30:04.081  INFO 4044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2021-01-25 09:30:04.410  INFO 4044 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$feda0964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 09:30:04.830  INFO 4044 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 09:30:04.848  INFO 4044 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 09:30:04.848  INFO 4044 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 09:30:04.967  INFO 4044 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 09:30:04.968  INFO 4044 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1635 ms
2021-01-25 09:30:05.182  INFO 4044 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-25 09:30:05.271  INFO 4044 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-25 09:30:05.316  INFO 4044 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 09:30:05.366  INFO 4044 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2021-01-25 09:30:05.368  INFO 4044 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2021-01-25 09:30:05.472  INFO 4044 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2021-01-25 09:30:05.649  INFO 4044 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 09:30:05.769  INFO 4044 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 09:30:06.275  INFO 4044 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 09:30:06.316  WARN 4044 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 09:30:06.453  INFO 4044 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 09:30:06.788  INFO 4044 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 09:30:06.839  INFO 4044 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 09:30:06.842  INFO 4044 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 4.257 seconds (JVM running for 6.333)
2021-01-25 09:30:14.115  INFO 4044 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 09:30:14.116  INFO 4044 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 09:30:14.129  INFO 4044 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2021-01-25 09:30:14.266  INFO 4044 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:30:14.317 DEBUG 4044 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:30:14.335 DEBUG 4044 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:30:14.348 DEBUG 4044 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:30:14.350 DEBUG 4044 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:30:14.351 DEBUG 4044 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:30:14.356 DEBUG 4044 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 6
2021-01-25 09:30:14.360 DEBUG 4044 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:30:14.360 DEBUG 4044 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:30:14.364 DEBUG 4044 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:30:14.366 DEBUG 4044 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:30:14.367 DEBUG 4044 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:30:14.372 DEBUG 4044 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:30:14.372 DEBUG 4044 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:30:14.372 DEBUG 4044 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:30:14.375 DEBUG 4044 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 4
2021-01-25 09:30:14.376  INFO 4044 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:30:14.657 ERROR 4044 --- [http-nio-9090-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.user.avatar" (template: "index" - line 68, col 105)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.user.avatar" (template: "index" - line 68, col 105)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 83 common frames omitted

2021-01-25 09:30:14.663 ERROR 4044 --- [http-nio-9090-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 09:33:21.309  INFO 18164 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 18164 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 09:33:21.311 DEBUG 18164 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 09:33:21.312  INFO 18164 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 09:33:21.380  INFO 18164 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-25 09:33:21.380  INFO 18164 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-25 09:33:21.989  INFO 18164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 09:33:22.010  INFO 18164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
2021-01-25 09:33:22.335  INFO 18164 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c15527a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 09:33:22.756  INFO 18164 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 09:33:22.783  INFO 18164 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 09:33:22.783  INFO 18164 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 09:33:22.897  INFO 18164 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 09:33:22.898  INFO 18164 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1518 ms
2021-01-25 09:33:23.082  INFO 18164 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-25 09:33:23.172  INFO 18164 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-25 09:33:23.216  INFO 18164 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 09:33:23.264  INFO 18164 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2021-01-25 09:33:23.265  INFO 18164 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2021-01-25 09:33:23.371  INFO 18164 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2021-01-25 09:33:23.565  INFO 18164 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 09:33:23.694  INFO 18164 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 09:33:24.195  INFO 18164 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 09:33:24.235  WARN 18164 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 09:33:24.352  INFO 18164 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 09:33:24.658  INFO 18164 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 09:33:24.702  INFO 18164 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 09:33:24.704  INFO 18164 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 3.804 seconds (JVM running for 5.213)
2021-01-25 09:33:35.934  INFO 18164 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 09:33:35.934  INFO 18164 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 09:33:35.944  INFO 18164 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2021-01-25 09:33:36.031  INFO 18164 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:33:36.074 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:33:36.090 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:33:36.104 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:33:36.107 DEBUG 18164 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:33:36.108 DEBUG 18164 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:33:36.116 DEBUG 18164 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 6
2021-01-25 09:33:36.120 DEBUG 18164 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:33:36.120 DEBUG 18164 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:33:36.124 DEBUG 18164 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:33:36.126 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:33:36.127 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:33:36.132 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:33:36.133 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:33:36.133 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:33:36.135 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 4
2021-01-25 09:33:36.136  INFO 18164 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:35:09.831  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:35:09.834 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:35:09.834 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:35:09.835 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:35:09.835 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:35:09.835 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:35:09.838 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 6
2021-01-25 09:35:09.838 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:35:09.838 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:35:09.840 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:35:09.841 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:35:09.841 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:35:09.843 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:35:09.844 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:35:09.844 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:35:09.845 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 4
2021-01-25 09:35:09.845  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:35:51.793  INFO 18164 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:35:51.795 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:35:51.795 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:35:51.797 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:35:51.797 DEBUG 18164 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:35:51.798 DEBUG 18164 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:35:51.802 DEBUG 18164 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 6
2021-01-25 09:35:51.803 DEBUG 18164 --- [http-nio-9090-exec-3] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:35:51.803 DEBUG 18164 --- [http-nio-9090-exec-3] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:35:51.805 DEBUG 18164 --- [http-nio-9090-exec-3] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:35:51.805 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:35:51.806 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:35:51.808 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:35:51.809 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:35:51.809 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:35:51.810 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 4
2021-01-25 09:35:51.810  INFO 18164 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:37:07.499  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:37:07.508 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:37:07.509 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:37:07.511 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:37:07.513 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:37:07.513 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:37:07.518 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 6
2021-01-25 09:37:07.519 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:37:07.519 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:37:07.521 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:37:07.522 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:37:07.522 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:37:07.526 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:37:07.527 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:37:07.527 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:37:07.530 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 4
2021-01-25 09:37:07.531  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:37:19.282  INFO 18164 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/6', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[6, {}]}
2021-01-25 09:37:19.285 DEBUG 18164 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: 
2021-01-25 09:37:19.522 ERROR 18164 --- [http-nio-9090-exec-9] c.w.s.h.ControllerExceptionHandler       : Request URL : /blog/6, Exception : {}

org.springframework.dao.TransientDataAccessResourceException: 
### Error querying database.  Cause: java.sql.SQLException: SQL String cannot be empty
### The error may exist in file [D:\Ideal-workspace\searchall\target\classes\mapper\BlogDao.xml]
### The error may involve com.wh.searchall.dao.BlogDao.getDetailedBlog
### The error occurred while executing a query
### SQL: 
### Cause: java.sql.SQLException: SQL String cannot be empty
; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy94.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy95.getDetailedBlog(Unknown Source)
	at com.wh.searchall.service.impl.BlogServiceImpl.getDetailedBlog(BlogServiceImpl.java:99)
	at com.wh.searchall.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$53688783.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.wh.searchall.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$53a30a6b.getDetailedBlog(<generated>)
	at com.wh.searchall.web.IndexController.toLogin(IndexController.java:76)
	at com.wh.searchall.web.IndexController$$FastClassBySpringCGLIB$$5ddf014f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.wh.searchall.web.IndexController$$EnhancerBySpringCGLIB$$9f1053ec.toLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: SQL String cannot be empty
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:85)
	at com.mysql.cj.jdbc.ClientPreparedStatement.<init>(ClientPreparedStatement.java:220)
	at com.mysql.cj.jdbc.ClientPreparedStatement.<init>(ClientPreparedStatement.java:194)
	at com.mysql.cj.jdbc.ClientPreparedStatement.getInstance(ClientPreparedStatement.java:136)
	at com.mysql.cj.jdbc.ConnectionImpl.clientPrepareStatement(ConnectionImpl.java:677)
	at com.mysql.cj.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:1670)
	at com.mysql.cj.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:1590)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at sun.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy76.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy121.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 80 common frames omitted
Caused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)
	at com.mysql.cj.AbstractPreparedQuery.checkNullOrEmptyQuery(AbstractPreparedQuery.java:163)
	at com.mysql.cj.jdbc.ClientPreparedStatement.<init>(ClientPreparedStatement.java:216)
	... 111 common frames omitted

2021-01-25 09:37:19.524  WARN 18164 --- [http-nio-9090-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.TransientDataAccessResourceException: 
### Error querying database.  Cause: java.sql.SQLException: SQL String cannot be empty
### The error may exist in file [D:\Ideal-workspace\searchall\target\classes\mapper\BlogDao.xml]
### The error may involve com.wh.searchall.dao.BlogDao.getDetailedBlog
### The error occurred while executing a query
### SQL: 
### Cause: java.sql.SQLException: SQL String cannot be empty
; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty]
2021-01-25 09:38:22.121  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:38:22.123 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:38:22.124 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:38:22.125 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:38:22.125 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:38:22.125 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:38:22.127 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 09:38:22.128 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:38:22.128 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:38:22.129 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:38:22.130 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:38:22.130 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:38:22.132 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:38:22.132 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:38:22.132 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:38:22.133 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 09:38:22.133  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:38:29.378  INFO 18164 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[2, {}]}
2021-01-25 09:38:29.380 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:38:29.380 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:38:29.381 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:38:29.382 DEBUG 18164 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ?, ? 
2021-01-25 09:38:29.382 DEBUG 18164 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer), 8(Integer)
2021-01-25 09:38:29.383 DEBUG 18164 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 1
2021-01-25 09:38:29.384 DEBUG 18164 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:38:29.384 DEBUG 18164 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:38:29.386 DEBUG 18164 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:38:29.386 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:38:29.387 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:38:29.389 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:38:29.389 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:38:29.389 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:38:29.390 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 09:38:29.390  INFO 18164 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:38:30.863  INFO 18164 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:38:30.865 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:38:30.865 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:38:30.866 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:38:30.866 DEBUG 18164 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:38:30.866 DEBUG 18164 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:38:30.868 DEBUG 18164 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 09:38:30.869 DEBUG 18164 --- [http-nio-9090-exec-6] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:38:30.869 DEBUG 18164 --- [http-nio-9090-exec-6] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:38:30.871 DEBUG 18164 --- [http-nio-9090-exec-6] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:38:30.871 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:38:30.871 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:38:30.873 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 09:38:30.873 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:38:30.874 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:38:30.875 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 09:38:30.875  INFO 18164 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:39:04.469 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 09:39:04.469 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 09:39:04.471 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 09:39:06.751 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 09:39:06.752 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 09:39:06.752 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 09:39:06.753 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 09:39:06.753 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:39:06.755 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 09:39:06.755 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:39:06.755 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:39:06.756 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:39:06.757 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:39:06.757 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:39:06.758 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:39:09.808 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:39:09.808 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:39:09.810 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:39:09.810 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:39:09.811 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:39:09.812 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:39:09.813 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 09:39:09.814 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 18(Long)
2021-01-25 09:39:09.815 DEBUG 18164 --- [http-nio-9090-exec-9] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 09:39:17.012 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:39:17.012 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:39:17.013 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:39:17.013 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:39:17.013 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:39:17.014 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:39:17.014 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 09:39:17.015 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 14(Long)
2021-01-25 09:39:17.016 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 09:39:28.476 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 09:39:28.476 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 09:39:28.477 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 09:39:28.542 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in 
2021-01-25 09:39:28.543 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 
2021-01-25 09:39:28.550 ERROR 18164 --- [http-nio-9090-exec-10] c.w.s.h.ControllerExceptionHandler       : Request URL : /admin/blogs, Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in file [D:\Ideal-workspace\searchall\target\classes\mapper\TagDao.xml]
### The error may involve com.wh.searchall.dao.TagDao.findAll-Inline
### The error occurred while setting parameters
### SQL: select * from t_tag where id in
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy94.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy96.findAll(Unknown Source)
	at com.wh.searchall.service.impl.TagServiceImpl.listTag(TagServiceImpl.java:61)
	at com.wh.searchall.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$5744ae6b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.wh.searchall.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$83f31023.listTag(<generated>)
	at com.wh.searchall.web.admin.BlogController.post(BlogController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy122.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy121.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 67 common frames omitted

2021-01-25 09:39:28.551  WARN 18164 --- [http-nio-9090-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in file [D:\Ideal-workspace\searchall\target\classes\mapper\TagDao.xml]
### The error may involve com.wh.searchall.dao.TagDao.findAll-Inline
### The error occurred while setting parameters
### SQL: select * from t_tag where id in
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2021-01-25 09:39:47.328 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 09:39:47.329 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 09:39:47.334 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 09:39:47.334 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in 
2021-01-25 09:39:47.335 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 
2021-01-25 09:39:47.336 ERROR 18164 --- [http-nio-9090-exec-10] c.w.s.h.ControllerExceptionHandler       : Request URL : /admin/blogs, Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in file [D:\Ideal-workspace\searchall\target\classes\mapper\TagDao.xml]
### The error may involve com.wh.searchall.dao.TagDao.findAll-Inline
### The error occurred while setting parameters
### SQL: select * from t_tag where id in
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy94.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy96.findAll(Unknown Source)
	at com.wh.searchall.service.impl.TagServiceImpl.listTag(TagServiceImpl.java:61)
	at com.wh.searchall.service.impl.TagServiceImpl$$FastClassBySpringCGLIB$$5744ae6b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.wh.searchall.service.impl.TagServiceImpl$$EnhancerBySpringCGLIB$$83f31023.listTag(<generated>)
	at com.wh.searchall.web.admin.BlogController.post(BlogController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy122.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy121.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 67 common frames omitted

2021-01-25 09:39:47.336  WARN 18164 --- [http-nio-9090-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in file [D:\Ideal-workspace\searchall\target\classes\mapper\TagDao.xml]
### The error may involve com.wh.searchall.dao.TagDao.findAll-Inline
### The error occurred while setting parameters
### SQL: select * from t_tag where id in
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2021-01-25 09:40:29.073 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 09:40:29.073 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 09:40:29.074 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 09:40:29.076 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? , ? ) 
2021-01-25 09:40:29.076 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 8(Long), 10(Long), 11(Long)
2021-01-25 09:40:29.079 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 3
2021-01-25 09:40:29.150 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.updateBlog  : ==>  Preparing: update t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?,tag_ids = ?, commentable = ? ,update_time = now() where id = ?; 
2021-01-25 09:40:29.151 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.updateBlog  : ==> Parameters: true(Boolean), 原创(String), SpringMVC(String), # 第一章：SpringMVC入门

## 1、SpringMVC 概述 

1）  Spring 为展现层提供的基于 MVC 设计理念的优秀的框架，是目前最主流的 
MVC 框架之一 ，一种轻量级的、基于MVC的Web层应用框架。偏前端而不是基于业务逻辑层。Spring框架的一个后续产品。
2）Spring3.0 后全面超越 Struts2，成为最优秀的 MVC 框架。
3）Spring MVC 通过一套 MVC注解，让POJO成为处理请求的控制器，而无须实现任
何接口。

SpringMVC能干什么
    1）  天生与Spring框架集成，如：(IOC,AOP)，如果是Struts还要整合
    2）  支持Restful风格
    3）  进行更简洁的Web层开发
    4）  支持灵活的URL到页面控制器的映射
    5）  非常容易与其他视图技术集成，如:Velocity、FreeMarker等等
    6）  因为模型数据不存放在特定的API里，而是放在一个Model里(Map数据结构实现，因此很容易被其他框架使用)
    7）  非常灵活的数据验证、格式化和数据绑定机制、能使用任何对象进行数据绑定，不必实现特定框架的API
    8）  更加简单、强大的异常处理
    9）  对静态资源的支持
    支持灵活的本地化、主题等解析(String), 2(Long), https://picsum.photos/id/111/800/450(String), 1）  Spring 为展现层提供的基于 MVC 设计理念的优秀的框架，是目前最主流的 
MVC 框架之一 ，一种轻量级的、基于MVC的Web层应用框架。偏前端而不是基于业务逻辑层。Spring框架的一个后续产品。
2）Spring3.0 后全面超越 Struts2，成为最优秀的 MVC 框架。
3）Spring MVC 通过一套 MVC注解，让POJO成为处理请求的控制器，而无须实现任
何接口。(String), false(Boolean), true(Boolean), true(Boolean), 8,10,11(String), true(Boolean), 14(Long)
2021-01-25 09:40:29.152 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.updateBlog  : <==    Updates: 1
2021-01-25 09:40:29.153 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.deleteTag   : ==>  Preparing: delete from t_blog_tags where blogs_id = ? 
2021-01-25 09:40:29.153 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.deleteTag   : ==> Parameters: 14(Long)
2021-01-25 09:40:29.154 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.deleteTag   : <==    Updates: 2
2021-01-25 09:40:29.154 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:40:29.155 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 8(Long), 14(Long)
2021-01-25 09:40:29.156 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:40:29.156 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:40:29.156 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 10(Long), 14(Long)
2021-01-25 09:40:29.157 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:40:29.158 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:40:29.159 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 11(Long), 14(Long)
2021-01-25 09:40:29.160 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:40:29.178 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 09:40:29.179 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 09:40:29.179 DEBUG 18164 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 09:40:29.180 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 09:40:29.180 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:40:29.182 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 09:40:29.182 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:40:29.182 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:40:29.183 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:40:29.183 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:40:29.183 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:40:29.184 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:09.654 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:41:09.654 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:41:09.655 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:41:09.656 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:41:09.656 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:41:09.658 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:09.658 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 09:41:09.659 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 14(Long)
2021-01-25 09:41:09.660 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 09:41:12.228 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 09:41:12.229 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 09:41:12.230 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 09:41:12.231 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? , ? ) 
2021-01-25 09:41:12.231 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 8(Long), 10(Long), 11(Long)
2021-01-25 09:41:12.232 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 3
2021-01-25 09:41:12.233 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.updateBlog  : ==>  Preparing: update t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?,tag_ids = ?, commentable = ? ,update_time = now() where id = ?; 
2021-01-25 09:41:12.233 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.updateBlog  : ==> Parameters: true(Boolean), 原创(String), SpringMVC(String), # 第一章：SpringMVC入门

## 1、SpringMVC 概述 

1）  Spring 为展现层提供的基于 MVC 设计理念的优秀的框架，是目前最主流的 
MVC 框架之一 ，一种轻量级的、基于MVC的Web层应用框架。偏前端而不是基于业务逻辑层。Spring框架的一个后续产品。
2）Spring3.0 后全面超越 Struts2，成为最优秀的 MVC 框架。
3）Spring MVC 通过一套 MVC注解，让POJO成为处理请求的控制器，而无须实现任
何接口。

SpringMVC能干什么
    1）  天生与Spring框架集成，如：(IOC,AOP)，如果是Struts还要整合
    2）  支持Restful风格
    3）  进行更简洁的Web层开发
    4）  支持灵活的URL到页面控制器的映射
    5）  非常容易与其他视图技术集成，如:Velocity、FreeMarker等等
    6）  因为模型数据不存放在特定的API里，而是放在一个Model里(Map数据结构实现，因此很容易被其他框架使用)
    7）  非常灵活的数据验证、格式化和数据绑定机制、能使用任何对象进行数据绑定，不必实现特定框架的API
    8）  更加简单、强大的异常处理
    9）  对静态资源的支持
    支持灵活的本地化、主题等解析(String), 2(Long), https://picsum.photos/id/111/800/450(String), 1）  Spring 为展现层提供的基于 MVC 设计理念的优秀的框架，是目前最主流的 
MVC 框架之一 ，一种轻量级的、基于MVC的Web层应用框架。偏前端而不是基于业务逻辑层。Spring框架的一个后续产品。
2）Spring3.0 后全面超越 Struts2，成为最优秀的 MVC 框架。
3）Spring MVC 通过一套 MVC注解，让POJO成为处理请求的控制器，而无须实现任
何接口。(String), false(Boolean), true(Boolean), true(Boolean), 8,10,11(String), true(Boolean), 14(Long)
2021-01-25 09:41:12.234 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.updateBlog  : <==    Updates: 1
2021-01-25 09:41:12.234 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.deleteTag   : ==>  Preparing: delete from t_blog_tags where blogs_id = ? 
2021-01-25 09:41:12.234 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.deleteTag   : ==> Parameters: 14(Long)
2021-01-25 09:41:12.235 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.deleteTag   : <==    Updates: 3
2021-01-25 09:41:12.235 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:41:12.235 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 8(Long), 14(Long)
2021-01-25 09:41:12.236 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:41:12.236 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:41:12.237 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 10(Long), 14(Long)
2021-01-25 09:41:12.237 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:41:12.238 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:41:12.238 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 11(Long), 14(Long)
2021-01-25 09:41:12.239 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:41:12.246 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 09:41:12.247 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 09:41:12.247 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 09:41:12.247 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 09:41:12.248 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:41:12.249 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 09:41:12.249 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:41:12.249 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:41:12.250 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:41:12.251 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:41:12.251 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:41:12.251 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:13.852 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:41:13.853 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:41:13.853 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:41:13.854 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:41:13.854 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:41:13.855 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:13.855 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 09:41:13.855 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 18(Long)
2021-01-25 09:41:13.856 DEBUG 18164 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 09:41:16.078 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 09:41:16.078 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 09:41:16.080 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 09:41:16.081 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 09:41:16.081 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 09:41:16.082 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 09:41:16.083 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.updateBlog  : ==>  Preparing: update t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?,tag_ids = ?, commentable = ? ,update_time = now() where id = ?; 
2021-01-25 09:41:16.083 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.updateBlog  : ==> Parameters: true(Boolean), 原创(String), 1111(String), 士大夫士大夫(String), 2(Long), https://picsum.photos/id/7/800/450(String), 撒旦发射点(String), false(Boolean), false(Boolean), true(Boolean), 9,10(String), true(Boolean), 18(Long)
2021-01-25 09:41:16.084 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.updateBlog  : <==    Updates: 1
2021-01-25 09:41:16.085 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.deleteTag   : ==>  Preparing: delete from t_blog_tags where blogs_id = ? 
2021-01-25 09:41:16.085 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.deleteTag   : ==> Parameters: 18(Long)
2021-01-25 09:41:16.085 DEBUG 18164 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.deleteTag   : <==    Updates: 2
2021-01-25 09:41:16.086 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:41:16.086 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 9(Long), 18(Long)
2021-01-25 09:41:16.086 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:41:16.087 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 09:41:16.087 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 10(Long), 18(Long)
2021-01-25 09:41:16.088 DEBUG 18164 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 09:41:16.094 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 09:41:16.095 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 09:41:16.095 DEBUG 18164 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 09:41:16.096 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 09:41:16.096 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:41:16.097 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 09:41:16.098 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:41:16.098 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:41:16.099 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:41:16.099 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:41:16.099 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:41:16.100 DEBUG 18164 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:20.461 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND recommend = ? 
2021-01-25 09:41:20.461 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: false(Boolean)
2021-01-25 09:41:20.462 DEBUG 18164 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 09:41:20.463 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:41:20.463 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:41:20.463 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:41:20.464 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:41:20.464 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:41:20.464 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:22.650 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND recommend = ? 
2021-01-25 09:41:22.650 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: true(Boolean)
2021-01-25 09:41:22.651 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 09:41:22.651 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.listBlog    : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and recommend = ? order by update_time desc LIMIT ? 
2021-01-25 09:41:22.651 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.listBlog    : ==> Parameters: true(Boolean), 8(Integer)
2021-01-25 09:41:22.652 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.listBlog    : <==      Total: 5
2021-01-25 09:41:22.653 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 09:41:22.653 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 09:41:22.654 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 09:41:22.654 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 09:41:22.654 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 09:41:22.655 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 09:41:34.913  INFO 18164 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:41:34.915 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:41:34.916 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:41:34.916 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:41:34.917 DEBUG 18164 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:41:34.917 DEBUG 18164 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:41:34.918 DEBUG 18164 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 09:41:34.918 DEBUG 18164 --- [http-nio-9090-exec-5] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:41:34.919 DEBUG 18164 --- [http-nio-9090-exec-5] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:41:34.920 DEBUG 18164 --- [http-nio-9090-exec-5] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:41:34.920 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:41:34.920 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:41:34.922 DEBUG 18164 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 17
2021-01-25 09:41:34.923 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:41:34.923 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:41:34.925 DEBUG 18164 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 09:41:34.925  INFO 18164 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:42:15.275  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[2, {}]}
2021-01-25 09:42:15.277 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:42:15.277 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:42:15.278 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:42:15.279 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ?, ? 
2021-01-25 09:42:15.279 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer), 8(Integer)
2021-01-25 09:42:15.281 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 1
2021-01-25 09:42:15.281 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:42:15.281 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:42:15.282 DEBUG 18164 --- [http-nio-9090-exec-4] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:42:15.283 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:42:15.283 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:42:15.284 DEBUG 18164 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 17
2021-01-25 09:42:15.284 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:42:15.284 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:42:15.285 DEBUG 18164 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 09:42:15.286  INFO 18164 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 09:42:18.313  INFO 18164 --- [http-nio-9090-exec-7] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 09:42:18.315 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 09:42:18.316 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 09:42:18.316 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 09:42:18.317 DEBUG 18164 --- [http-nio-9090-exec-7] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 09:42:18.317 DEBUG 18164 --- [http-nio-9090-exec-7] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 09:42:18.319 DEBUG 18164 --- [http-nio-9090-exec-7] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 09:42:18.319 DEBUG 18164 --- [http-nio-9090-exec-7] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 09:42:18.319 DEBUG 18164 --- [http-nio-9090-exec-7] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 09:42:18.320 DEBUG 18164 --- [http-nio-9090-exec-7] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 09:42:18.320 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 09:42:18.321 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 09:42:18.322 DEBUG 18164 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 17
2021-01-25 09:42:18.322 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 09:42:18.322 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 09:42:18.323 DEBUG 18164 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 09:42:18.323  INFO 18164 --- [http-nio-9090-exec-7] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 10:42:49.299 DEBUG 18164 --- [http-nio-9090-exec-10] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 10:42:49.300 DEBUG 18164 --- [http-nio-9090-exec-10] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 10:42:49.301 DEBUG 18164 --- [http-nio-9090-exec-10] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 10:42:50.564 DEBUG 18164 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 10:42:50.564 DEBUG 18164 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 10:42:50.565 DEBUG 18164 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 10:42:50.565 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 10:42:50.565 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 10:42:50.567 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 10:42:50.568 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 10:42:50.568 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 10:42:50.569 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 10:42:50.570 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 10:42:50.570 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 10:42:50.571 DEBUG 18164 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 10:42:55.033 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 10:42:55.034 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 10:42:55.035 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 10:42:55.036 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 10:42:55.036 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 10:42:55.038 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 10:42:55.038 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 10:42:55.039 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 18(Long)
2021-01-25 10:42:55.040 DEBUG 18164 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 10:47:09.874  INFO 11184 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 11184 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 10:47:09.876 DEBUG 11184 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 10:47:09.877  INFO 11184 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 10:47:09.947  INFO 11184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-25 10:47:09.947  INFO 11184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-25 10:47:10.646  INFO 11184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 10:47:10.670  INFO 11184 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2021-01-25 10:47:11.020  INFO 11184 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f19ae5ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 10:47:11.485  INFO 11184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 10:47:11.504  INFO 11184 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 10:47:11.504  INFO 11184 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 10:47:11.658  INFO 11184 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 10:47:11.659  INFO 11184 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1712 ms
2021-01-25 10:47:11.817  INFO 11184 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-25 10:47:11.925  INFO 11184 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-25 10:47:11.977  INFO 11184 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 10:47:12.038  INFO 11184 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2021-01-25 10:47:12.040  INFO 11184 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2021-01-25 10:47:12.169  INFO 11184 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2021-01-25 10:47:12.365  INFO 11184 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 10:47:12.515  INFO 11184 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 10:47:13.144  INFO 11184 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 10:47:13.193  WARN 11184 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 10:47:13.345  INFO 11184 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 10:47:13.696  INFO 11184 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 10:47:13.746  INFO 11184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 10:47:13.749  INFO 11184 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 4.314 seconds (JVM running for 6.642)
2021-01-25 10:47:19.905  INFO 11184 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 10:47:19.906  INFO 11184 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 10:47:19.920  INFO 11184 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2021-01-25 10:47:23.571 DEBUG 11184 --- [http-nio-9090-exec-6] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 10:47:23.591 DEBUG 11184 --- [http-nio-9090-exec-6] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 10:47:23.605 DEBUG 11184 --- [http-nio-9090-exec-6] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 10:47:25.162 DEBUG 11184 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 10:47:25.163 DEBUG 11184 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 10:47:25.164 DEBUG 11184 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 10:47:25.166 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 10:47:25.167 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 10:47:25.171 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 10:47:25.175 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 10:47:25.176 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 10:47:25.177 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 10:47:25.180 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 10:47:25.180 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 10:47:25.181 DEBUG 11184 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 10:47:30.728 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 10:47:30.729 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 10:47:30.730 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 10:47:30.731 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 10:47:30.731 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 10:47:30.732 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 10:47:48.137 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 10:47:48.138 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 18(Long)
2021-01-25 10:47:48.152 DEBUG 11184 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 11:10:13.139  INFO 11184 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-01-25 11:10:13.140  INFO 11184 --- [Thread-17] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 11:10:13.144  INFO 11184 --- [Thread-17] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2021-01-25 11:10:13.149  INFO 11184 --- [Thread-17] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2021-01-25 11:10:20.900  INFO 4588 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 4588 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 11:10:20.902 DEBUG 4588 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 11:10:20.902  INFO 4588 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 11:10:20.971  INFO 4588 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-25 11:10:20.971  INFO 4588 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-25 11:10:21.583  INFO 4588 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 11:10:21.602  INFO 4588 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces.
2021-01-25 11:10:21.884  INFO 4588 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e7ce3d4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 11:10:22.289  INFO 4588 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 11:10:22.313  INFO 4588 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 11:10:22.313  INFO 4588 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 11:10:22.424  INFO 4588 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 11:10:22.425  INFO 4588 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1453 ms
2021-01-25 11:10:22.592  INFO 4588 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-25 11:10:22.674  INFO 4588 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-25 11:10:22.718  INFO 4588 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 11:10:22.762  INFO 4588 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2021-01-25 11:10:22.763  INFO 4588 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2021-01-25 11:10:22.859  INFO 4588 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2021-01-25 11:10:23.026  INFO 4588 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 11:10:23.142  INFO 4588 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 11:10:23.633  INFO 4588 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 11:10:23.673  WARN 4588 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 11:10:23.790  INFO 4588 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 11:10:24.096  INFO 4588 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 11:10:24.140  INFO 4588 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 11:10:24.143  INFO 4588 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 3.671 seconds (JVM running for 5.031)
2021-01-25 11:10:42.922  INFO 4588 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 11:10:42.923  INFO 4588 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 11:10:42.931  INFO 4588 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2021-01-25 11:10:43.011  INFO 4588 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 11:10:43.059 DEBUG 4588 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 11:10:43.084 DEBUG 4588 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 11:10:43.098 DEBUG 4588 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 11:10:43.100 DEBUG 4588 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 11:10:43.100 DEBUG 4588 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 11:10:43.117 DEBUG 4588 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 11:10:43.120 DEBUG 4588 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 11:10:43.121 DEBUG 4588 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 11:10:43.124 DEBUG 4588 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 11:10:43.126 DEBUG 4588 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 11:10:43.127 DEBUG 4588 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 11:10:43.131 DEBUG 4588 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 17
2021-01-25 11:10:43.132 DEBUG 4588 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 11:10:43.132 DEBUG 4588 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 11:10:43.134 DEBUG 4588 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 11:10:43.136  INFO 4588 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 11:10:48.848  INFO 4588 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[14, {}]}
2021-01-25 11:10:48.851 DEBUG 4588 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:10:48.852 DEBUG 4588 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 14(Long)
2021-01-25 11:10:48.854 DEBUG 4588 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:10:48.874 DEBUG 4588 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:10:48.874 DEBUG 4588 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 11:10:48.875 DEBUG 4588 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:10:49.099  INFO 4588 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:10:49.127 ERROR 4588 --- [http-nio-9090-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9090-exec-4] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "blog.commentabled" (template: "blog" - line 477, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "blog.commentabled" (template: "blog" - line 477, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'commentabled' cannot be found on object of type 'com.wh.searchall.pojo.Blog' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 75 common frames omitted

2021-01-25 11:10:49.129 ERROR 4588 --- [http-nio-9090-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'commentabled' cannot be found on object of type 'com.wh.searchall.pojo.Blog' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:109)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1371)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1117)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-01-25 11:12:30.353  INFO 4588 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[14, {}]}
2021-01-25 11:12:30.355 DEBUG 4588 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:12:30.356 DEBUG 4588 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 14(Long)
2021-01-25 11:12:30.357 DEBUG 4588 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:12:30.358 DEBUG 4588 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:12:30.358 DEBUG 4588 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 11:12:30.359 DEBUG 4588 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:12:30.360  INFO 4588 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:14:09.738  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 22324 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 11:14:09.740 DEBUG 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 11:14:09.740  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 11:14:09.822  INFO 22324 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-25 11:14:09.823  INFO 22324 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-25 11:14:10.458  INFO 22324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 11:14:10.481  INFO 22324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
2021-01-25 11:14:10.785  INFO 22324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4993076] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 11:14:11.195  INFO 22324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 11:14:11.212  INFO 22324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 11:14:11.213  INFO 22324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 11:14:11.332  INFO 22324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 11:14:11.332  INFO 22324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1509 ms
2021-01-25 11:14:11.506  INFO 22324 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-01-25 11:14:11.589  INFO 22324 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-01-25 11:14:11.633  INFO 22324 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 11:14:11.679  INFO 22324 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2021-01-25 11:14:11.680  INFO 22324 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2021-01-25 11:14:11.777  INFO 22324 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2021-01-25 11:14:11.949  INFO 22324 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 11:14:12.070  INFO 22324 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 11:14:12.589  INFO 22324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 11:14:12.628  WARN 22324 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 11:14:12.752  INFO 22324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 11:14:13.057  INFO 22324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 11:14:13.101  INFO 22324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 11:14:13.103  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 3.833 seconds (JVM running for 5.22)
2021-01-25 11:15:03.014  INFO 22324 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 11:15:03.014  INFO 22324 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 11:15:03.024  INFO 22324 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2021-01-25 11:15:03.105  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 11:15:03.153 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 11:15:03.171 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 11:15:03.185 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 11:15:03.187 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 11:15:03.199 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 11:15:03.205 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 11:15:03.208 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 11:15:03.209 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 11:15:03.214 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 11:15:03.216 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 11:15:03.217 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 11:15:03.220 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 17
2021-01-25 11:15:03.220 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 11:15:03.221 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 11:15:03.222 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 11:15:03.223  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 11:15:07.881  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/17', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[17, {}]}
2021-01-25 11:15:07.884 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:15:07.885 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 17(Long)
2021-01-25 11:15:07.886 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:15:07.899 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? , ? ) 
2021-01-25 11:15:07.899 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 9(Long), 11(Long)
2021-01-25 11:15:07.900 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 3
2021-01-25 11:15:08.053  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:15:12.537  INFO 22324 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 11:15:12.538 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:15:12.539 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 11:15:12.541 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:15:12.542 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:15:12.543 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 11:15:12.544 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:15:12.568  INFO 22324 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:20:27.857 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 11:20:27.857 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 11:20:27.858 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 11:20:29.129 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 11:20:29.130 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 11:20:29.130 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 11:20:29.131 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 11:20:29.131 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 11:20:29.134 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 11:20:29.135 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 11:20:29.135 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 11:20:29.136 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 11:20:29.137 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 11:20:29.138 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 11:20:29.139 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 11:20:34.755 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 11:20:34.755 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 11:20:34.756 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 11:20:34.757 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 11:20:34.758 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 11:20:34.760 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 11:20:34.762 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 11:20:34.762 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 13(Long)
2021-01-25 11:20:34.764 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 11:21:59.053 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 11:21:59.053 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 11:21:59.054 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 11:21:59.055 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:21:59.055 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:21:59.056 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:21:59.070 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.updateBlog  : ==>  Preparing: update t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?,tag_ids = ?, commentable = ? ,update_time = now() where id = ?; 
2021-01-25 11:21:59.072 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.updateBlog  : ==> Parameters: true(Boolean), 原创(String), Spring框架(String), # 第一章：Spring核心IOC

## 1、企业级系统特点

企业级系统

> 大规模：用户数量多、数据规模大、功能众多（天猫，淘宝，京东，苏宁等）
>
> 性能和安全要求高 (用户信息的高安全性，代码的安全性等)
>
> 业务复杂（业务复杂度提高，简单的下单可能用到各种业务判断和逻辑，调用各种接口等）
>
> 灵活应变（业务不是固定的，需要经常改变业务代码或者实现各种功能，要求快速高效）



EJB框架：重量级框架，服务器端框架，学习EJB的高昂代价，和极低的开发效率，极高的资源消耗，都造成了EJB的使用困难，且不利于项目迁移，不能再主流web容器中运行等



Spring容器取代了原有的EJB容器，因此以Spring框架为核心的应用无须EJB容器支持，可以在Web容器中运行，而可以理解为EJB需要EJB提供的容器才能进行部署。

Spring容器管理的不再是复杂的EJB组件，而是POJO（Plain Old Java Object） Bean。



## 2、Spring简介

### 2.1、什么是Spring

> Spring是一个开源框架，Spring是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson 在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为了解决企业应用开发的复杂性而创建的。
>
> 框架的主要优势之一就是其分层架构，分层架构允许使用者选择使用哪一个组件，同时为 J2EE 应用程序开发提供集成的框架。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从Spring中受益。Spring的核心是控制反转（IoC）和面向切面（AOP）。简单来说，Spring是一个分层的JavaSE/EE full-stack(一站式) 轻量级开源框架。

特点：

- Spring是一个开源框架


- Spring为简化企业级开发而生，使用Spring开发可以将Bean对象，Dao组件对象，Service组件对象等交给Spring容器来管理，这样使得很多复杂的代码在Spring中开发却变得非常的优雅和简洁，有效的降低代码的耦合度，极大的方便项目的后期维护、升级和扩展。


- Spring是一个IOC(DI)和AOP容器框架。

### 2.2、Spring体系结构

​    Spring一共有越20个组件，但是真正的核心组件只有几个，我们一起来看下Spring框架的总体架构图，了解一下他的体系结构。

> ​    1层次 核心容器
>
> ​        Beans--管理javabean
>
> ​        Core--核心
>
> ​        Context--上下文配置
>
> ​        expression language -- 表达式语言
>
> ​    2层次 面向切面
>
> ​        AOP--面向切面编程
>
> ​        Aspects--切面，AOP的框架
>
> ​    3层次 数据访问
>
> ​        jdbc--数据库开发
>
> ​        orm--整合hibernate，包括对mybatis持久化框架的支持
>
> ​        Transactions--事务管理，很重要
>
> ​        Struts--整合Struts框架
>
> ​    4层次 
>
> ​        整合Junit单元测试
>
> ​        web--支持web开发，就是后面的MVC框架

Spring框架的核心组件只有三个：Core、Context和Beans。他们构建起了整个Spring的骨骼架构，没有他们就不可能有AOP、Web等上层的特性功能。上面这些是Spring特性功能。

比较重要的几个包：

> AOP包(主要提供面向切面编程的实现)，
>
> Web(主要提供了Web应用开发的支持及针对Web应用的MVC思想实现) 、
>
> ORM（为我们之前学的Hibernate，以及Mybatis这类持久化框架提供支持）、
>
> 还有Spring MVC（这个是它自带的一个web视图层，可以替代到Sturts2，后面还会详细的学习这个SpringMVC框架）。。等等，其中最最核心的就是AOP和下面Spring核心包，也是我们学习的重点。



## 3、Spring设计理念

​    Spring是面向Bean的编程，就是面向java实体，没有实体，Spring框架的意义也就没了

​    Context:Spring的运行环境，代表上下文，负责运行和管理实体对象

​    Core:Spring的核心，可以看做是提供的各种工具类

​    比作演出：Beans是演员，Context是舞台环境，Core是服装和道具

​    Spring 两大核心技术

> ​     控制反转(IoC：Inversion of Control )/依赖注入(DI：Dependency Injection )
>
> ​     面向切面编程(AOP：Aspect Oriented Programming)



## 4、Spring的优良特性

> [1]非侵入式：基于Spring开发的应用中的对象可以不依赖于Spring的API(看是不是必须要实现其接口或者继承某些类)
>
> [2]依赖注入特性将组件关系透明化(对象之间，由IoC容器管理调用)，降低了耦合度
>
> ​                控制反转：IOC——Inversion of Control，指的是将对象的创建权交给Spring去创建。使用Spring之前，对象的创建都是由我们自己在代码中new创建。而使用Spring之后。对象的创建都是由给了Spring框架。
>
> ​                依赖注入：DI——Dependency Injection，是指依赖的对象不需要手动调用setXX方法去设置，而是通过配置赋值。
>
> [3]面向切面编程：Aspect Oriented Programming——AOP，允许将通用任务进行集中式处理，可以将日志处理，事务处理等抽离出来，单独处理
>
> [4]与第三方框架的良好整合，使现有技术更加易用,推进编码最佳实践--写更少的代码实现更多的功能



## 5、实现spring的helloworld

5.1、 新建java项目

通过官网下载spring的包，地址：https://repo.spring.io/release/org/springframework/spring/

下载对应版本，是dist.zip包，解压后，使用的主要jar包为：

> 4个核心jar包（beans、core、context、expression对应的jar包，其它的都不需要（doc和source的jar不能放，会报错）） + 1个依赖（commons-loggins…jar，这个是因为core包中做了很多日志相关的东西，日志就用到了这个包里面的内容）

5.2、新建一个lib目录，然后将下载的jar放到lib下面，选中所有，右击添加build path即可

5.3、创建xml配置文件applicationContext.xml，习惯上是这个名字

5.4、新建包，com.kgc.spring.beans，新建Person类，属性name，工具获取getset方法，toString方法，然后编写普通方法sayHi

```java
		public class Person {
            private String who;

            public String getWho() {
                return who;
            }

            public void setWho(String who) {
                this.who = who;
            }

            /**
             * 自定义一个普通打招呼的方法
             */
            public void sayHi(){
                System.out.println("My Name Is :" + who);
            }
        }
```



5.5、Spring配置文件内容如下：

```xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 
		bean标签：声明一个需要spring的IOC容器帮我们创建的实例对象
			id属性：实例对象的别名
			class属性：指定创建哪个类（JavaBean）的实例对象-类的全类名
	 -->
	<bean id="person" class="com.kgc.spring.beans.Person">
		<!-- property子标签：给创建的实例对象中的属性赋值，实际使用反射调用setter方法 -->
		<property name="who">
			<!-- 可以处理特殊字符（<![CDATA[包含特殊符号内容]]） -->
			<value>HelloSpring</value>
		</property>
		<!-- value属性中如果包含特殊字符，必须转义 -->
		<!-- <property name="who" value="HelloWorld"/> -->
	</bean>
</beans>

```

5.6、编写代码获取HelloSpring实例，依赖junit单元测试

```java
		public class HelloSpringTest {
                @Test
                public void helloSpring() {
                    // 通过ClassPathXmlApplicationContext实例化Spring的上下文IOC容器对象
                    ApplicationContext context = new ClassPathXmlApplicationContext(
                            "applicationContext.xml");
                    // 通过ApplicationContext的getBean()方法，根据id（配置的id对应）来获取bean的实例
                    Person person = (Person) context.getBean("person");
                    // 执行print()方法
                    person.sayHi();
                }
            }
```

执行main方法就可以输出内容了



## 6、什么是IOC

> 为什么要用IOC:
>
> 现有开发创建类的实例是通过new创建的，高耦合，new一个类要了解类所有，且不利于代码扩展和修改
>
> IoC 全称为 Inversion of Control，翻译为 “控制反转”（可以理解为整体思想），它还有一个别名为 DI（Dependency Injection）,即依赖注入(定义接收资源的方式，也可以理解为IOC的具体实现)。
>
> 整个 IoC 理论的核心:
>
> ​        所谓 IOC ，就是由 Spring IOC 容器来负责对象的生命周期和对象之间的关系
>
> ​        如何理解“控制反转”好呢？理解好它的关键在于我们需要回答如下四个问题：
>
> ​        谁控制谁
>
> ​        控制什么
>
> ​        为何是反转
>
> ​        哪些方面反转了
>
> ​        在回答这四个问题之前，我们先看 IOC 的定义：
>
> ​        上面这句话是。如何来理解这句话？我们引用一个例子来走阐述
>
> ​        已找女朋友为例（对于程序猿来说这个值得探究的问题）。一般情况下我们是如何来找女朋友的呢？首先我们需要根据自己的需求（漂亮、身材好、性格好）找一个妹子，然后到处打听她的兴趣爱好、微信、电话号码，然后各种投其所好送其所要，最后追到手
>
> ​        这就是我们通常做事的方式，如果我们需要某个对象，一般都是采用这种直接创建的方式(new BeautifulGirl())，这个过程复杂而又繁琐，而且我们必须要面对每个环节，同时使用完成之后我们还要负责销毁它，在这种情况下我们的对象与它所依赖的对象耦合在一起。
>
> ​        其实我们需要思考一个问题？我们每次用到自己依赖的对象真的需要自己去创建吗？我们知道，我们依赖对象其实并不是依赖该对象本身，而是依赖它所提供的服务，只要在我们需要它的时候，它能够及时提供服务即可，至于它是我们主动去创建的还是别人送给我们的，其实并不是那么重要。再说了，相比于自己千辛万苦去创建它还要管理、善后而言，直接有人送过来是不是显得更加好呢？
>
> ​        这个给我们送东西的“人” 就是 IoC，在上面的例子中，它就相当于一个婚介公司，作为一个婚介公司它管理着很多男男女女的资料，当我们需要一个女朋友的时候，直接跟婚介公司提出我们的需求，婚介公司则会根据我们的需求提供一个妹子给我们，我们只需要负责谈恋爱，生猴子就行了。你看，这样是不是很简单明了。
>
> ​        诚然，作为婚介公司的 IoC 帮我们省略了找女朋友的繁杂过程，将原来的主动寻找变成了现在的被动接受（符合我们的要求），更加简洁轻便。你想啊，原来你还得鞍马前后，各种巴结，什么东西都需要自己去亲力亲为，现在好了，直接有人把现成的送过来，多么美妙的事情啊。所以，简单点说，IoC 的理念就是让别人为你服务
>
> ​        在没有引入 IoC 的时候，被注入的对象直接依赖于被依赖的对象，有了 IoC 后，两者及其他们的关系都是通过 Ioc Service Provider 来统一管理维护的。被注入的对象需要什么，直接跟 IoC Service Provider 打声招呼，后者就会把相应的被依赖对象注入到被注入的对象中，从而达到 IOC Service Provider 为被注入对象服务的目的。所以 IoC 就是这么简单！原来是需要什么东西自己去拿，现在是需要什么东西让别人（IOC Service Provider）送过来
>
> ​        现在在看上面那四个问题，答案就显得非常明显了:
>
> ​            谁控制谁：在传统的开发模式下，我们都是采用直接 new 一个对象的方式来创建对象，也就是说你依赖的对象直接由你自己控制，但是有了 IOC 容器后，则直接由 IoC 容器来控制。所以“谁控制谁”，当然是 IoC 容器控制对象。
>
> ​            控制什么：控制对象。
>
> ​            为何是反转：没有 IoC 的时候我们都是在自己对象中主动去创建被依赖的对象，这是正转。但是有了 IoC 后，所依赖的对象直接由 IoC 容器创建后注入到被注入的对象中，依赖的对象由原来的主动获取变成被动接受，所以是反转。
>
> ​            哪些方面反转了：所依赖对象的获取被反转了。
>
> ​    所谓依赖注入，就是由IOC容器在运行期间，动态地将某种依赖关系注入到对象之中。
>
> ​    所以，依赖注入(DI)和控制反转(IOC)是从不同的角度的描述的同一件事情，就是指通过引入IOC容器，利用依赖关系注入的方式，实现对象之间的解耦。
>
> ​    工厂模式，类似领养宠物，根据不同的宠物类名或者类型，获取不同的对象，即可以根据不同的对象名称，获取不同的对象实例，被动接受，而非主动创建。



## 7、WEB实现的示例：

新建项目web项目，选择jdk，tomcat版本后，创建完成，然后项目右击，属性Properties，打开窗口的，Project Facets，然后勾选spring的依赖，如果不是MyEclipse，那就需要自己添加了，使用都一样

#### 1）新建包com.kgc.spring和类Person，跟上面一样

#### 2）编写配置文件

新建source folder — resources（如果直接建普通目录，不能直接读取，必须手动添加）

将applicationContext.xml，移动到resources目录下

文件内容如下：

```xml
	 <?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
                <!-- 配置bean 
                      配置方式:  基于xml的方式 ,使用的全类名的方式.
                     <bean>: 受Spring管理的一个javaBean对象. 
                        id:  <bean>的唯一标识. 在整个IOC容器中唯一不重复. 
                        class: 指定javaBean的全类名. 目的是通过反射创建对象。 
                               Class cls = Class.forName("com.kgc.spring.helloWorld.Person");
                               Object obj = cls.newInstance();   必须提供无参数构造器. 
                     <property>: 给对象的属性赋值
                        name: 指定属性名  , 指定set风格的属性名. 如果将实体中的set方法名改为setWho2,此配置就会直接报错了。
                        value:指定属性值     
                -->
                <bean id="person" class="com.kgc.spring.Person">
                    <!-- property元素用来为实例的属性赋值,此处实际是调用setWho()方法实现赋值操作 -->
                    <property name="name">
                        <!-- 此处将字符串"Spring"赋值给who属性 -->
                        <value>HelloSpring</value>
                    </property>
                </bean>
            </beans>
```

#### 3）编写代码获取HelloSpring实例

```java
public class HelloSpringTest {
            @Test
            public void helloSpring() {
                // 通过ClassPathXmlApplicationContext实例化Spring的上下文
                ApplicationContext context = new ClassPathXmlApplicationContext(
                        "applicationContext.xml");
                // 通过ApplicationContext的getBean()方法，根据id（配置的id对应）来获取bean的实例
                Person person = (Person) context.getBean("person");
                // 执行sayHello方法
                person.sayHello();
            }

        }
```

#### 4）Spring中IOC容器的实现

> 1）在通过IOC容器读取Bean的实例之前，需要先将IOC容器本身实例化。
> 2）Spring提供了IOC容器的两种实现方式
>
>     ① BeanFactory：IOC容器的基本实现，是Spring内部的基础设施，是面向Spring本身的，不是提供给开发人员使用的。
>     ② ApplicationContext：BeanFactory的子接口，提供了更多高级特性。面向Spring的使用者，几乎所有场合都使用ApplicationContext而不是底层的BeanFactory。

> **ApplicationContext的主要子接口**
>
>  ConfigurableApplicationContext
>
> 1)  是ApplicationContext的子接口，包含一些扩展方法
> 2)  refresh()和close()让ApplicationContext具有启动、关闭和刷新上下文的能力。
>
> WebApplicationContext
> 1)  专门为WEB应用而准备的，它允许从相对于WEB根目录的路径中完成初始化工作 
>
> 
>
> **ApplicationContext的主要实现类**
>
> 1)  ClassPathXmlApplicationContext：对应类路径（src）下的XML格式的配置文件(类路径就是编译后的bin路径，可以看编译目录，看文件位置)
> 2)  FileSystemXmlApplicationContext：对应文件系统（磁盘中）中的XML格式的配置文件
> 3)  在初始化时就创建单例的bean，也可以通过配置的方式指定创建的Bean是多实例的。



#### 5）bean对象获取方式

方式一：通过ApplicationContext的getBean()方法，根据id（配置的id对应）来获取bean的实例

```
Person person = (Person) context.getBean("person");
```

方式二：通过ApplicationContext的getBean()方法，根据具体类型来获取bean的实例

```
Person person = context.getBean(Person.class);
```

```
这个是通过配置文件的配置全类名进行获取实体对象，如果多个同类型的bean，会报错
```

方式三：通过ApplicationContext的getBean()方法，根据id值+具体类型来获取bean的实例

```
Person person = context.getBean("person", Person.class);
```



#### 6）依赖注入的两种方式

##### 1） 通过bean的setter方法赋值

##### 2） 通过bean的构造器赋值

```xml
小结：
            设值注入和构造注入的区别：
                设值注入-习惯使用
                    通过setter访问器实现
                    时效性差
                    灵活性好，但setter方法数量较多
                    通过无参构造实例化
                构造注入
                    通过构造方法实现
                    时效性好
                    灵活性差，仅靠重载限制太多
                    通过匹配的构造方法实例化，但建议保留无参构造
```

#### 7）p命名空间注入属性值

为了简化XML文件的配置，越来越多的XML文件采用属性而非子元素配置信息。Spring从2.5版本开始引入了一个新的p命名空间，可以通过<bean>元素属性的方式配置Bean 的属性。
使用p命名空间后，基于XML的配置方式将进一步简化。

 p 命名空间的特点：使用属性而不是子元素的形式配置Bean的属性，从而简化了配置代码，注意是setter注入，不是构造注入。

```
对于直接量（基本数据类型、字符串）属性：p:属性名="属性值"
```

```
对于引用Bean的属性：p:属性名-ref="Bean的id"
```

#### 8）可以使用的值，即不同数据类型注入，了解

```xml
字面量(可以使用字符串标识的值，就叫字面量)
        1)  可以使用字符串表示的值，可以通过value属性或value子节点的方式指定
        2)  基本数据类型及其封装类、String等类型都可以采取字面值注入的方式
        3） 若字面值中包含特殊字符，可以使用<![CDATA[]]>把字面值包裹起来
```

#### 9）引用其他的bean

配置文件中，引入已经存在的bean，比如Person中，存在car的实体类型属性

```xml
		<!-- 引用其他的bean，这个只能是IOC容器内的，不能找外面的 -->
         <bean id="person" class="com.kgc.spring.Person">
            <!-- car不能使用value了，使用ref关联最初的那个配置car -->
            <property name="car"  ref="car"></property>
         </bean>
```

##### 1、内部bean的使用

修改spring配置文件

```xml
			<!-- 内部bean -->
             <bean id="person1" class="com.kgc.spring.di.Person">
                <property name="car">
                    <!-- 内部bean 只能 在内部使用，没有必要配置id了.  -->
                    <bean class="com.kgc.spring.di.Car">
                        <property name="brand" value="Mini"></property>
                        <property name="crop" value="宝马"></property>
                        <property name="price" value="300000"></property>
                    </bean>
                </property>
             </bean>
```



##### 2、给级联属性赋值

```xml
		还是在Person对象中引用其他bean汽车Car的第一个示例，<bean>标签内的
		<property name="car"  ref="car"></property>
        
		后增加如下配置
		
		<!-- 给级联属性赋值-->
        <property name="car.speed" value="280"></property>

        再运行单元测试testRef，看结果，新的值就有了
```

#### 10）集合属性注入

在Spring中可以通过一组内置的XML标签来配置集合属性，例如：<list>，<set>或<map>。

```xml
1）数组和List
      配置java.util.List类型的属性，需要指定<list>标签，在标签里包含一些元素。
      这些标签
      可以通过<value>指定简单的常量值，通过<ref>指定对其他Bean的引用。
      通过<bean>指定内置bean定义。通过<null/>指定空元素。甚至可以内嵌其他集合。

      数组的定义和List一样，都使用<list>元素。

      配置java.util.Set需要使用<set>标签，定义的方法与List一样。

                    <property name="list">
                        <!-- 构造集合 -->
                        <list>
                            <!--<bean> 
                                如果没有，可以使用内部bean类写多个 <ref/>如果是事先有了注入的bean了，就可以直接指向
                            -->
                            <ref bean="bean1"/>
                            <ref bean="bean2"/>
                            <ref bean="bean3"/>
                        </list>
                        
                        <!-- <array></array> 这个不建议使用，直接用list即可 ，既可以给list，也可以给数组赋值-->
                        <!-- <set></set> -->
                    </property>

            
2）Map集合
            Java.util.Map通过<map>标签定义，<map>标签里可以使用多个<entry>作为子标签。每个条目包含一个键和一个值。 

            必须在<key>标签里定义键。

            因为键和值的类型没有限制，所以可以自由地为它们指定<value>、<ref>、<bean>或<null/>元素。

            当然也可以将Map的键和值作为<entry>的属性定义：简单常量使用key和value来定义；bean引用通过key-ref和value-ref属性定义。

                <!-- Map集合 -->
                 <bean id="map" class="类全类名">
                    <property name="map" >
                        <!-- 构造map -->
                        <map>
                            <entry key="AA"  value-ref="bean1"></entry>               
                            <entry key="BB"  value-ref="bean2"></entry>
                            <entry key="CC"  value-ref="bean"></entry>
                        </map>
                    </property>
                 </bean>

3）集合类型bean

        按上面类内引用的集合对象（如personList的配置），如果只能将集合对象配置在某个bean内部，则这个集合的配置将不能重用。我们需要 将集合bean的配置拿到外面，供其他bean引用。

        配置集合类型的bean需要引入util名称空间
        修改spring配置文件spring-di.xml，增加头信息引入util命名空间，加载在beans标签内，跟beans类似
        xmlns:util="http://www.springframework.org/schema/util" 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd

        配置内容
            <!-- 集合Bean -->
             <util:list id="listBean">
                <ref bean="bean1"/>
                <ref bean="bean2"/>
                <ref bean="bean3"/>
                <!-- <bean>
                </bean> -->
             </util:list>

		使用：

            <property name="list" ref="listBean"></property>
```

#### 11）工厂bean的使用

```xml
Spring中有两种类型的bean，一种是普通bean，另一种是工厂bean，即FactoryBean。

     工厂bean跟普通bean不同，其返回的对象不是指定类的一个实例，其返回的是该工厂bean的getObject方法所返回的对象。
     
     工厂bean必须实现org.springframework.beans.factory.FactoryBean接口。

```

```xml
BeanFactory  与  FactoryBean的区别?，这二者没有任何关系，相当于两个概念
```

```xml
类似于：
	Collection  与 Collections 的区别 
	Final   finally   的区别
```

#### 12）bean的高级配置：bean与bean的关系，了解

#### 13）bean的作用域 * 

在Spring中，可以在<bean>元素的scope属性里设置bean的作用域，以决定这个bean是单实例的还是多实例的。

默认情况下，Spring只为每个在IOC容器里声明的bean创建唯一一个实例，整个IOC容器范围内都能共享该实例：所有后续的getBean()调用和bean引用都将返回这个唯一的bean实例。该作用域被称为singleton，它是所有bean的默认作用域。

```xml
        <!-- 
                bean的作用域:
                    singleton: 单例的(默认值), 在整个IOC容器中只能存在一个bean的对象. 而且在IOC
                                              容器对象被创建时，就创建单例的bean的对象. 后续每次通过getBean()方法
                                               获取bean对象时，返回的都是同一个对象.  
                    prototype: 原型的/多例的       在整个IOC容器中可有多个bean的对象。 在IOC容器对象被
                                   创建时， 不会创建原型的bean的对象。 而是等到每次通过getBean()方法获取
                               bean对象时，才会创建一个新的bean对象返回.

                    request:   一次请求对应一个bean对象，只在web环境中有效
                    session:   一次会话对应一个bean对象，只在web环境中有效
        -->
```

13）bean的生命周期

```xml
	1)  Spring IOC容器可以管理bean的生命周期，Spring允许在bean生命周期内特定的时间点执行指定的任务。
    2)  Spring IOC容器对bean的生命周期进行管理的过程：
        ① 通过构造器或工厂方法创建bean实例
        ② 为bean的属性设置值和对其他bean的引用
        ③ 调用bean的初始化方法
        ④ bean可以使用了
        ⑤ 当容器关闭时，调用bean的销毁方法
    3） 在配置bean时，通过init-method和destroy-method 属性为bean指定初始化和销毁方法
```

#### 14）bean的后置处理器

```xml
1)  bean的后置处理器
    ① bean后置处理器允许在调用初始化方法前后对bean进行额外的处理
    ② bean后置处理器对IOC容器里的所有bean实例逐一处理，而非单一实例。其典型         
		应用是：检查bean属性的正确性或根据特定的标准更改bean的属性。
    ③ bean后置处理器时需要实现接口：
    
    org.springframework.beans.factory.config.BeanPostProcessor。在初始化方法被调用前后，Spring将把每个bean实例分别传递给上述接口的以下两个方法：
        postProcessBeforeInitialization(Object, String)
        postProcessAfterInitialization(Object, String)

2)  添加bean后置处理器后bean的生命周期变为7个了
    ①通过构造器或工厂方法创建bean实例
    ②为bean的属性设置值和对其他bean的引用
    ③将bean实例传递给bean后置处理器的postProcessBeforeInitialization()方法
    ④调用bean的初始化方法
    ⑤将bean实例传递给bean后置处理器的postProcessAfterInitialization()方法
    ⑥bean可以使用了
    ⑦当容器关闭时调用bean的销毁方法
```



#### 15）使用spring配置数据源连接池

c3po（连接池管理包c3p0-0.9.1.jar）和mysql的连接数据库驱动包加入到项目中

增加配置

```xml
    <?xml version="1.0" encoding="UTF-8"?>
        <beans xmlns="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
            
            <!-- 直接配置c3p0连接池    ComboPooledDataSource 连接池对象 -->
            <bean id ="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
                <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mysql"></property>
                <property name="user" value="root"></property>
                <property name="password" value="1234"></property>
                <property name="initialPoolSize" value="5"></property>   
                <property name="maxPoolSize" value="10"></property>
            </bean>

        </beans>
```

```xml
注意:
	使用外部properties文件
    key要加上一个前缀，防止出错，因为spring加载配置的时候，会将配置的解析信息放到跟电脑的系统变量一起，可能导致获取的值是系统的，而不是配置的，要注意。

    修改spring的配置文件，注释掉直接配置方式，增加如下内容

     <!-- 通过引入外部的属性文件配置c3p0连接池 -->
     <!-- 引入外部的属性文件 -->
     <!-- 推荐写法：增加context命名空间-->
         <context:property-placeholder location="classpath:db.properties"/>

         <!-- 配置c3p0连接池 -->
         <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="driverClass" value="${jdbc.driver}"></property>
            <property name="jdbcUrl" value="${jdbc.url}"></property>
            <property name="user" value="${jdbc.username}"></property>
            <property name="password" value="${jdbc.password}"></property>
         </bean>
```

## 8、Spring的自动装配

### 1）xml装配bean

```xml
    自动装配的概念
        手动装配：以value或ref的方式明确指定属性值都是手动装配。
        自动装配：根据指定的装配规则，不需要明确指定，Spring自动将匹配的属性值注入bean中。

    装配模式
        1）根据类型自动装配：将类型匹配的bean作为属性注入到另一个bean中。若IOC容器中有多个与目标bean类型一致的bean，Spring将无法判定哪个bean最合适该属性，不能执行自动装配。

		byType: 使用bean的属性的类型与IOC容器中<bean>的class进行匹配。 如果唯一匹配则装配成功，如果匹配到多个兼容类型的bean，则抛出异常。

        2）根据名称自动装配：必须将配置的目标bean的id名称和类的属性名设置的完全相同
        
		byName: 使用bean的属性名与IOC容器中<bean>的id值进行匹配. 匹配成功则装配成功. 不成功则不装配。
          
    建议：
         在项目中更多的使用注解的方式实现，xml配置的方式基本不用，了解原理即可。
```

### 2）注解装配bean：

相对于XML方式，通过注解的方式配置bean更加简洁和优雅，而且和MVC组件化开发的理念十分契合，是开发中常用的使用方式。

```xml
    常用注解：
        1)  普通组件：@Component
                标识一个受Spring IOC容器管理的控制层组件
        2)  持久化层组件：@Repository
                标识一个受Spring IOC容器管理的持久化层组件
        3)  业务逻辑层组件：@Service
                标识一个受Spring IOC容器管理的业务逻辑层组件
        4)  控制层/表述层控制器组件：@Controller
                标识一个受Spring IOC容器管理的表述层控制器组件

        5)  组件命名规则
            ①默认情况：使用组件的简单类名首字母小写后得到的字符串作为bean的id
            ②使用组件注解的value属性指定bean的id

            注意：
            	事实上Spring并没有能力识别一个组件到底是不是它所标记的类型
            	即使将@Respository注解用在一个表述层控制器组件上面也不会产生任何错误
            	所以@Respository、@Service、@Controller这几个注解
            	仅仅是为了让开发人员自己明确当前的组件扮演的角色，在使用上基本是没有区别的。

--------------------------配置组件扫描-------------------------
				<!-- 
                    组件扫描:  扫描加了注解的类，并管理到IOC容器中 
                    base-package: 基包. Spring会扫描指定包以及子包下所有的类，将带有注解的类管理到IOC容器中
                -->
                <context:component-scan base-package="com.kgc.spring.annotation"></context:component-scan>

--------------------------指定扫描和排除扫描-------------------------

    如果想要某个组件不让IOC管理，spring也提供了对应的处理

    ------指定扫描------

        <!-- 指定扫描  
                设置父属性：use-default-filters="false" -->
        <context:component-scan base-package="com.kgc.spring.annotation" use-default-filters="false">

        增加context:component-scan的子节点：

        <!-- 按照注解方式进行指定，注意type和expression（注解的全类名） -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

        或者

        <!-- 按照指定类进行指定，注意type和expression（具体类的全类名） -->
        <context:include-filter type="assignable" expression="com.kgc.spring.annotation.controller.xxxController"/>


    ------排除扫描------

        <!-- 排除扫描   
                设置父属性：use-default-filters="true" 这个是默认值 -->
        <context:component-scan base-package="com.kgc.spring.annotation" use-default-filters="true">

        <!-- 按照注解方式进行指定，注意type和expression（注解的全类名） -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        
        或者

        <!-- 按照指定类进行指定，注意type和expression（具体类的全类名） -->
        <context:exclude-filter type="assignable" expression="com.kgc.spring.annotation.controller.xxxController"/>


-----------使用注解自动装配：@Autowired注解-----------

    IOC的特点就是，同一个容器中的对象，我只要告诉当前bean对象，需要谁，然后就自动给我了，所以这个时候要使用一个新的主键@Autowired

-----------@Autowired注解的工作机制-----------
    /**
     *  @Autowired 完成bean属性的自动装配
     *  
     *  工作机制:  
        1）首先会使用byType的方式进行自动装配，如果能唯一匹配，则装配成功， 如果匹配到多个兼容类型的bean,还会尝试使用byName的方式进行唯一确定，如果能唯一确定，则装配成功，如果不能唯一确定，则装配失败，抛出异常. 
     *  
     *  2）默认情况下， 使用@Autowired标注的属性必须被装配，如果装配不了，会抛出异常. 
     *  
        3）可以使用required=false来设定不是必须要被装配. 
     *  
     *  4）如果匹配到多个兼容类型的bean，可以使用@Qualifier来进一步指定要装配的bean的id值。
     *  
     *  5）@Autowired @Qualifier 注解即可在成员变量上，也可以加在对应的set方法上。 
     *  
     */

```
## 9、详细案例见课堂项目代码



# 第二章：Spring核心AOP

## 1、AOP的定义和原理

AOP的目标：让我们可以“专心做事”
AOP原理
将复杂的需求分解出不同方面，将散布在系统中的公共功能集中解决
采用代理机制组装起来运行，在不改变原程序的基础上对代码段进行增强处理，增加新的功能

前奏，问题引入

情景：数学计算器 

```java
	1)  要求
            ①执行加减乘除运算
            ②日志：在程序执行期间追踪正在发生的活动（举例，线上出问题不能停业务的）
            
    2） 代码示例
        新建包：com.kgc.spring.aop.before
        新建计算器接口
            /**
             * 算数计算器
             *
             */
            public interface ArithmeticCalculator {
                
                public int add(int a ,int b );
                
                public int sub(int a, int b );
                
                public int mul(int a ,int b );
                
                public int div(int a, int b );
            }

        创建实现类
            public class ArithmeticCalculatorImpl implements ArithmeticCalculator {

                @Override
                public int add(int a, int b) {
                    System.out.println("日志处理---->这个是加法运算开始，参数[" + a + "," + b + "]");
                    int result = a + b;
                    System.out.println("日志处理---->这个是加法运算结束，结果[" + result + "]");
                    return result;
                }

                @Override
                public int sub(int a, int b) {
                    System.out.println("日志处理---->这个是减法运算开始，参数[" + a + "," + b + "]");
                    int result = a - b;
                    System.out.println("日志处理---->这个是减法运算结束，结果[" + result + "]");
                    return result;
                }

                @Override
                public int mul(int a, int b) {
                    System.out.println("日志处理---->这个是乘法运算开始，参数[" + a + "," + b + "]");
                    int result = a * b;
                    System.out.println("日志处理---->这个是乘法运算结束，结果[" + result + "]");
                    return result;
                }

                @Override
                public int div(int a, int b) {
                    System.out.println("日志处理---->这个是除法运算开始，参数[" + a + "," + b + "]");
                    int result = a / b;
                    System.out.println("日志处理---->这个是除法运算结束，结果[" + result + "]");
                    return result;
                }

            }
    分析：
        1）代码混乱：越来越多的非业务需求(日志和验证等)加入后，原有的业务方法急剧膨胀。每个方法在处理核心逻辑的同时还必须兼顾其他多个关注点。
        2）代码分散: 以日志需求为例，只是为了满足这个单一需求，就不得不在多个模块（方法）里多次重复相同的日志代码
        3）代码维护难：如果需要修改日志处理。如果日志需求发生变化，必须修改所有模块。
        4）硬编码：为了写代码而写代码，没有任何设计而言
        5）内容耦合：功能和日志就应该是相互区分开的，将日志内容强制加入业务（但是要注意，如果是业务内部，需要增加具体的日志信息，还是需要特别处理的，跟aop没有关系）
```

动态代理的原理

```xml
	代理设计模式的原理：使用一个代理对象将原始对象包装起来，然后用该代理对象取代原始对象。任何对原始对象的调用都要通过代理。代理对象决定是否以及何时将方法调用转到原始对象上。

    比如：身边的微商，真正商家卖东西的就是原始对象，而代理商只是增加了宣传，也可以理解为增强处理

AOP的概述
    1)  AOP(Aspect-Oriented Programming，面向切面编程)：是一种新的方法论，是对传      
    统 OOP(Object-Oriented Programming，面向对象编程)的补充。
    2)  AOP编程操作的主要对象是切面(aspect)，而切面模块化横切关注点（可以理解为功能）。
    在应用AOP编程时，仍然需要定义公共功能，但可以明确的定义这个功能应用在哪里，以什么方式应用，并且不必修改受影响的类。这样一来横切关注点就被模块化到特殊的类里——这样的类我们通常称之为“切面”。
    3)  AOP的好处： 
        ① 每个事物逻辑位于一个位置，代码不分散，便于维护和升级
        ② 业务模块更简洁，只包含核心业务代码
```

## 2、AOP的相关术语

> - 增强（Adivce）：又翻译成通知，定义了切面是什么以及何时使用，描述了切面要完成的工作和何时需要执行这个工作。是织入到目标类连接点上的一段程序代码。增强包含了用于添加到目标连接点上的一段执行逻辑，又包含了用于定位连接点的方位信息。（所以spring提供的增强接口都是带方位名：BeforeAdvice、（表示方法调用前的位置）AfterReturninAdvice、（表示访问返回后的位置）ThrowAdvice等等，所以只有结合切点和增强两者一起才能确定特定的连接点并实施增强逻辑）
>
>
> - 切入点（Pointcut）：Advice定义了切面要发生“故事”和时间，那么切入点就定义了“故事”发生的地点。例如某个类或者方法名，Spring中允许我们使用正则来指定。
>
>
> - 连接点（Joinpoint）：切入点匹配的执行点称作连接点。如果说切入点是查询条件，那连接点就是被选中的具体的查询结果（具体的数据记录）。简单记忆，就是类中的各个方法
>
>
> - 切面（Aspect）：切点和增强组成切面，是封装了各个抽离的功能点的类。Spring AOP就是负责实施切面的框架，它将切面所定义的横切逻辑织入到切面所指定的连接点中
>
>
> - 代理（Proxy）：AOP框架创建的对象。一个类被AOP织入增强之后，就产生了一个结果类，它是融合了原类和增强逻辑的代理类。
>
>
> - 目标对象（Target）：增强逻辑的织入的目标类
>
>
> - 织入（Weaving）：将增强添加到目标类具体连接点上的过程。AOP有三种织入的方式：编译期织入、类装载期织入、动态代理织入（spring采用动态代理织入）
>
>
> - 更好理解：在一个多或多个连接点上，可以将切面的功能（advice）织入到程序的执行过程中

- `Aspect`（切面）： Aspect 声明类似于 Java 中的类声明，在 Aspect 中会包含着一些 Pointcut 以及相应的 Advice。
- `Joint point`（连接点）：表示在程序中明确定义的点，典型的包括方法调用，对类成员的访问以及异常处理程序块的执行等等，它自身还可以嵌套其它 joint point。
- `Pointcut`（切点）：表示一组 joint point，这些 joint point 或是通过逻辑关系组合起来，或是通过通配、正则表达式等方式集中起来，它定义了相应的 Advice 将要发生的地方。
- `Advice`（增强）：Advice 定义了在 `Pointcut` 里面定义的程序点具体要做的操作，它通过 before、after 和 around 来区别是在每个 joint point 之前、之后还是代替执行的代码。
- `Target`（目标对象）：织入 `Advice` 的目标对象.。
- `Weaving`（织入）：将 `Aspect` 和其他对象连接起来, 并创建 `Advice`d object 的过程

让我们来假设一下, 从前有一个叫爪哇的小县城, 在一个月黑风高的晚上, 这个县城中发生了命案. 作案的凶手十分狡猾, 现场没有留下什么有价值的线索. 不过万幸的是, 刚从隔壁回来的老王恰好在这时候无意中发现了凶手行凶的过程, 但是由于天色已晚, 加上凶手蒙着面, 老王并没有看清凶手的面目, 只知道凶手是个男性, 身高约七尺五寸. 爪哇县的县令根据老王的描述, 对守门的士兵下命令说: 凡是发现有身高七尺五寸的男性, 都要抓过来审问. 士兵当然不敢违背县令的命令, 只好把进出城的所有符合条件的人都抓了起来.

来让我们看一下上面的一个小故事和 AOP 到底有什么对应关系.
首先我们知道, 在 Spring AOP 中 `Joint point` 指代的是所有方法的执行点, 而 point cut 是一个描述信息, 它修饰的是 `Joint point`, 通过 point cut, 我们就可以确定哪些 `Joint point` 可以被织入 `Advice`. 对应到我们在上面举的例子, 我们可以做一个简单的类比, **`Joint point` 就相当于 爪哇的小县城里的百姓**,**`pointcut` 就相当于 老王所做的指控, 即凶手是个男性, 身高约七尺五寸**, **而 `Advice` 则是施加在符合老王所描述的嫌疑人的动作: 抓过来审问**.
为什么可以这样类比呢?

- `Joint point` ： 爪哇的小县城里的百姓: 因为根据定义, `Joint point` 是所有可能被织入 `Advice` 的候选的点, 在 Spring AOP中, 则可以认为所有方法执行点都是 `Joint point`. 而在我们上面的例子中, 命案发生在小县城中, 按理说在此县城中的所有人都有可能是嫌疑人.
- `Pointcut` ：男性, 身高约七尺五寸: 我们知道, 所有的方法(joint point) 都可以织入 `Advice`, 但是我们并不希望在所有方法上都织入 `Advice`, 而 `Pointcut` 的作用就是提供一组规则来匹配joinpoint, 给满足规则的 joinpoint 添加 `Advice`. 同理, 对于县令来说, 他再昏庸, 也知道不能把县城中的所有百姓都抓起来审问, 而是根据凶手是个男性, 身高约七尺五寸, 把符合条件的人抓起来. 在这里 凶手是个男性, 身高约七尺五寸 就是一个修饰谓语, 它限定了凶手的范围, 满足此修饰规则的百姓都是嫌疑人, 都需要抓起来审问.
- `Advice` ：抓过来审问, `Advice` 是一个动作, 即一段 Java 代码, 这段 Java 代码是作用于 point cut 所限定的那些 `Joint point` 上的. 同理, 对比到我们的例子中, 抓过来审问 这个动作就是对作用于那些满足 男性, 身高约七尺五寸 的爪哇的小县城里的百姓.
- `Aspect`:：`Aspect` 是 `point cut `与 `Advice` 的组合, 因此在这里我们就可以类比: “根据老王的线索, 凡是发现有身高七尺五寸的男性, 都要抓过来审问” 这一整个动作可以被认为是一个 `Aspect`.

![image-20210120095733581](C:\Users\wanghan\AppData\Roaming\Typora\typora-user-images\image-20210120095733581.png)

**Advice 的类型**

- `before advice`, 在 join point 前被执行的 advice. 虽然 before advice 是在 join point 前被执行, 但是它并不能够阻止 join point 的执行, 除非发生了异常(即我们在 before advice 代码中, 不能人为地决定是否继续执行 join point 中的代码)
- `after return advice`, 在一个 join point 正常返回后执行的 advice
- `after throwing advice`, 当一个 join point 抛出异常后执行的 advice
- `after(final) advice`, 无论一个 join point 是正常退出还是发生了异常, 都会被执行的 advice.
- `around advice`, 在 join point 前和 joint point 退出后都执行的 advice. 这个是最常用的 advice.
- `introduction`，introduction可以为原有的对象增加新的属性和方法。

```xml
说明：
        切面可以理解为由增强处理和切入点组成，既包含了横切逻辑的定义，也包含了连接点的定义。面向切面编程主要关心两个问题，即：在什么位置，执行什么功能。Spring AOP是负责实施切面的框架，即由Spring AOP完成织入工作。
    
用这个能做哪些事情：
    1.Spring声明式事务管理配置。
    2.Controller层的参数校验。
    3.在执行方法前,判断是否具有权限。
    4.对部分函数的调用进行日志记录。监控部分重要函数，若抛出指定的异常，可以以短信或邮件方式通知相关人员。
    5.信息过滤，页面转发等等功能
```

### 2.1、简介

> AspectJ：Java社区里最完整最流行的AOP框架。
>
> 在Spring2.0以上版本中，可以使用基于AspectJ注解或基于XML配置的AOP。

### 2.2、基本用法

#### 2.2.1、核心配置：

```xml
		<?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:aop="http://www.springframework.org/schema/aop"
                xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
                
                <!-- 组件扫描 -->
                <context:component-scan base-package="com.kgc.spring.annotation"></context:component-scan>

                <!-- 基于注解使用AspectJ: 主要的作用是当Spring IOC容器侦测到bean配置文件中的<aop:aspectj-autoproxy>元素时，会自动为 与AspectJ切面匹配的bean创建代理. 默认使用jdk的动态代理，如果要使用cglib的，必须proxy-target-class="true" -->
                <aop:aspectj-autoproxy/>
            </beans>
```

#### 2.2.2、用AspectJ注解@Aspect声明切面

> 1)  要在Spring中声明AspectJ切面，只需要在IOC容器中将切面声明为bean实例。
>
> 2)  当在Spring IOC容器中初始化AspectJ切面之后，Spring IOC容器就会为那些与 AspectJ切面相匹配的bean创建代理。
>
> 3)  在AspectJ注解中，切面只是一个带有@Aspect注解的Java类，它往往要包含很多通知。
>
> 4)  通知是标注有某种注解的简单的Java方法。
>
> 5)  AspectJ支持5种类型的通知注解：
>
> ```java
>     ① @Before：前置通知，在方法执行之前执行
>     ② @After：后置通知，在方法执行之后执行
>     ③ @AfterReturning：返回通知，在方法返回结果之后执行
>     ④ @AfterThrowing：异常通知，在方法抛出异常之后执行
>     ⑥ @Around：环绕通知，围绕着方法执行，可以简单连理为前置，后置，返回和异常的结合体
> ```

#### 2.2.3、切入点表达式

```
   *      * com.kgc.spring.annotation.*.*(..)
```

```java
   *    第一个 * : 任意修饰符 任意返回值
   *    第二个 * : 任意类
   *    第三个 * : 任意方法
   *     .. : 任意参数列表

      这里面如果要获取方法名和参数，那就用到一个连接点对象: JoinPoint（org.aspectj.lang包下的）
```

#### 2.2.4、切面执行优先级

```java
通过注解@Order(值)设置切面的优先级
	默认int类型最大值 2147483647  值越小优先级越高
```

#### 2.2.5、重用切入点表达式

在切面类中，随便定义一个方法，如下

```java
/**
 * 声明切入点表达式
 */
@Pointcut("execution(* com.kgc.spring.aspectJ.annotation.*.*(..))")
public void declarePointCut() {}

使用如下

@After("declarePointCut()")
或
@AfterReturning(value="declarePointCut()",returning="result")

如果想要在其它切面中也使用，不能直接用，必须如下写

        @Before("声明了切入点表达式的切面.declarePointCut()")
        这样就可以了
```

## 3、用xml的方式配置切面-了解，不常用

3.1、概述：

除了使用AspectJ注解声明切面，Spring也支持在bean配置文件中声明切面。这种声明是通过aop名称空间中的XML元素完成的。

正常情况下，基于注解的声明要优先于基于XML的声明。通过AspectJ注解，切面可以与AspectJ兼容，而基于XML的配置则是Spring专有的。由于AspectJ得到越来越多的 AOP框架支持，所以以注解风格编写的切面将会有更多重用的机会。

3.2、配置细节

在bean配置文件中，所有的Spring AOP配置都必须定义在<aop:config>元素内部。对于每个切面而言，都要创建一个<aop:aspect>元素来为具体的切面实现引用后端bean实例。

切面bean必须有一个标识符，供<aop:aspect>元素引用。

3.3、简单示例

```xml
<?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:aop="http://www.springframework.org/schema/aop"
                xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
                
                <!-- 目标对象 -->
                <bean id="arithmeticCalculatorImpl" class="com.kgc.spring.aspectJ.xml.ArithmeticCalculatorImpl"></bean>
                
                <!-- 切面 -->
                <bean id="loggingAspect" class="com.kgc.spring.aspectJ.xml.LoggingAspect"></bean>
                <bean id="validationAspect" class="com.kgc.spring.aspectJ.xml.ValidationAspect"></bean>
                
                <!-- AOP: 切面  通知  切入点表达式 -->
                <aop:config>
                    <!-- 切面 -->
                    <aop:aspect ref="loggingAspect" order="2">
                    
                        <!-- 切入点表达式 -->
                        <aop:pointcut expression="execution(* com.kgc.spring.aspectJ.xml.*.*(..))" id="myPointCut"/>
                    
                        <!-- 通知 -->
                        <aop:before method="beforeMethod"  pointcut-ref="myPointCut"/>
                        <aop:after method="afterMethod"  pointcut-ref="myPointCut"/>
                        <aop:after-returning method="afterReturningMethod" pointcut-ref="myPointCut" returning="result"/>
                        <aop:after-throwing method="afterThrowingMethod" pointcut-ref="myPointCut" throwing="ex"/>
                        
                        <!-- 注释掉，它是上面的合体，所以不用并存 -->
                        <!-- <aop:around method="aroundMethod" pointcut-ref="myPointCut"/> -->
                    
                    </aop:aspect>
                    
                    <aop:aspect ref="validationAspect" order="1">
                        <aop:before method="beforeMethod" pointcut-ref="myPointCut"/>
                    </aop:aspect>
                
                </aop:config>
	</beans>
```

对于around和afterThrowing通知，要想二者兼容，在around的通知里将异常抛出而非打印：

```Java
throw new RuntimeException(throwable);
//    throwable.printStackTrace();
```

## 4、Spring的事务管理

### 4.1、事务概述

> 1)  在JavaEE企业级开发的应用领域，为了保证数据的完整性和一致性，必须引入数据库事务的概念，所以事务管理是企业级应用程序开发中必不可少的技术。
> 2)  事务就是一组由于逻辑上紧密关联而合并成一个整体(工作单元)的多个数据库操作，这些操作要么都执行，要么都不执行。 
> 3)  事务的四个关键属性(ACID)
>
> ```java
> 原子性(atomicity)：“原子”的本意是“不可再分”，事务的原子性表现为一个事务中涉及到的多个操作在逻辑上缺一不可。事务的原子性要求事务中的所有操作要么都执行，要么都不执行。
> ```
>
> ```java
> 一致性(consistency)：“一致”指的是数据的一致，具体是指：所有数据都处于满足业务规则的一致性状态。一致性原则要求：一个事务中不管涉及到多少个操作，都必须保证事务执行之前数据是正确的，事务执行之后数据仍然是正确的。如果一个事务在执行的过程中，其中某一个或某几个操作失败了，则必须将其他所有操作撤销，将数据恢复到事务执行之前的状态，这就是回滚。
> ```
>
> ```java
> 隔离性(isolation)：在应用程序实际运行过程中，事务往往是并发执行的，所以很有可能有许多事务同时处理相同的数据，因此每个事务都应该与其他事务隔离开来，防止数据损坏。隔离性原则要求多个事务在并发执行过程中不会互相干扰。
> ```
>
> ```java
> 持久性(durability)：持久性原则要求事务执行完成后，对数据的修改永久的保存下来，不会因各种系统错误或其他意外情况而受到影响。通常情况下，事务对数据的修改应该被写入到持久化存储器中。
> ```

### 4.2、事务管理的分类：

```java
编程式事务管理
    1)  使用原生的JDBC API进行事务管理
        ①获取数据库连接Connection对象
        ②取消事务的自动提交
        ③执行操作
        ④正常完成操作时手动提交事务
        ⑤执行失败时回滚事务
        ⑥关闭相关资源
    2)  评价
            使用原生的JDBC API实现事务管理是所有事务管理方式的基石，同时也是最典型 的编程式事务管理。编程式事务管理需要将事务管理代码嵌入到业务方法中来控制事务  的提交和回滚。在使用编程的方式管理事务时，必须在每个事务操作中包含额外的事务  管理代码。相对于核心业务而言，事务管理的代码显然属于非核心业务，如果多个模块都使用同样模式的代码进行事务管理，显然会造成较大程度的代码冗余。
    
声明式事务管理
    大多数情况下声明式事务比编程式事务管理更好：它将事务管理代码从业务方法中分离出来，以声明的方式来实现事务管理。
    事务管理代码的固定模式作为一种横切关注点，可以通过AOP方法模块化，进而借助Spring AOP框架实现声明式事务管理。
    Spring在不同的事务管理API之上定义了一个抽象层，通过配置的方式使其生效，从而让应用程序开发人员不必了解事务管理API的底层实现细节，就可以使用Spring的事务管理机制。
    Spring既支持编程式事务管理，也支持声明式的事务管理。
```

### 4.3、Spring提供的事务管理器

```java
    Spring从不同的事务管理API中抽象出了一整套事务管理机制，让事务管理代码从特定的事务技术中独立出来。开发人员通过配置的方式进行事务管理，而不必了解其底层是如何实现的。
    Spring的核心事务管理抽象是PlatformTransactionManager。它为事务管理封装了一组独立于技术的方法。无论使用Spring的哪种事务管理策略(编程式或声明式)，事务管理器都是必须的。
    事务管理器可以以普通的bean的形式声明在Spring IOC容器中。

事务管理器的主要实现
    1)  DataSourceTransactionManager：在应用程序中只需要处理一个数据源，而且通过JDBC存取。
    2)  JtaTransactionManager：在JavaEE应用服务器上用JTA(Java Transaction API)进行事务管理，基本不用
    3)  HibernateTransactionManager：用Hibernate框架存取数据库，不涉及
```

### 4.4、配置spring数据源

```xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:tx="http://www.springframework.org/schema/tx"
                xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
                
                <context:component-scan base-package="com.kgc.spring.tx.annotation"></context:component-scan>
                
                <!-- 数据源 -->
                <context:property-placeholder location="classpath:db.properties"/>
                <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                    <property name="driverClass" value="${jdbc.driver}"></property>
                    <property name="jdbcUrl" value="${jdbc.url}"></property>
                    <property name="user" value="${jdbc.username}"></property>
                    <property name="password" value="${jdbc.password}"></property>
                </bean>
                <!-- JdbcTemplate -->
                <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
                    <property name="dataSource" ref="dataSource"></property>
                </bean>
</beans>                       
```

### 4.5、配置spring的事务管理器

```xml
	<!-- 事务管理器 -->
            <bean id="dataSourceTransactionManager"
                 class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                 <!-- 管住事务就要先管住数据源连接 -->
                <property name="dataSource" ref="dataSource"></property>
            </bean>
            
            <!-- 开启事务注解 
                transaction-manager 用来指定事务管理器， 如果事务管理器的id值 是 transactionManager，可以省略不进行指定。 
            -->
            <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
```

### 4.6、Spring事务注解用法

```java
@Transactional注解支持两种方式

        一种是在方法上，只对当前方法生效，优先级高于类上面的

        一种是在类上面，对当前类中所有的方法都起作用
```

### 4.7、事务属性:

```java
		/**
         * 
         *   1. 事务的传播行为 propagation: 一个事务方法被另外一个事务方法调用时，当前的事务如何使用事务. 
         *          Propagation.REQUIRED  默认值.  使用调用者的事务（全程一个事务）. 
         *          Propagation.REQUIRES_NEW     将调用者的事务挂起, 重新开启事务来使用. 

            如：@Transactional(propagation=Propagation.REQUIRES_NEW)

         *   2. 事务的隔离级别 isolation
         *          1    读未提交      脏读（读取别的事务没有提交的数据）
         *          2    读已提交      不可重复读（两次读取的数据不一致）
         *          4    可重复读（mysql默认）      幻读（两次读取一次没数据，后来又有数据）
         *          8    串行化        效率低。
         *   3. 事务的回滚与不回滚   默认情况下， Spring会对所有的运行时异常进行事务回滚.
         *          rollbackFor 
         *          rollbackForClassName
         *          noRollbackFor
         *          noRollbackForClassName
         *   4. 事务的只读设置:
         *          readOnly 
         *              true:  只读     代表着只会对数据库进行读取操作， 不会有修改的操作.（只是告诉Spring而已，但是仍然可以做写操作，不建议有修改操作，如果加了这个，spring对修改是不会自动加锁了）
         *                          如果确保当前的事务只有读取操作，就有必要设置为只读，可以帮助数据库
         *                          引擎优化事务 
         *              false: 非只读   不仅会读取数据还会有修改操作。 
         *   5. 事务的超时设置:  设置事务在强制回滚之前可以占用的时间. 
         *          timeout:   秒为单位 
         *           
         */ 
```

### 4.8、使用xml的方式实现事务管理(String), 2(Long), https://picsum.photos/id/7/800/450(String), spring框架简介以及使用(String), true(Boolean), true(Boolean), true(Boolean), 10,8(String), true(Boolean), 13(Long)
2021-01-25 11:21:59.076 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.updateBlog  : <==    Updates: 1
2021-01-25 11:21:59.077 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.deleteTag   : ==>  Preparing: delete from t_blog_tags where blogs_id = ? 
2021-01-25 11:21:59.077 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.deleteTag   : ==> Parameters: 13(Long)
2021-01-25 11:21:59.078 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.deleteTag   : <==    Updates: 3
2021-01-25 11:21:59.078 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 11:21:59.079 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 8(Long), 13(Long)
2021-01-25 11:21:59.080 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 11:21:59.080 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 11:21:59.080 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 10(Long), 13(Long)
2021-01-25 11:21:59.081 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 11:21:59.102 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 11:21:59.102 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 11:21:59.103 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 11:21:59.104 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 11:21:59.104 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 11:21:59.106 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 11:21:59.106 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 11:21:59.107 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 11:21:59.107 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 11:21:59.108 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 11:21:59.108 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 11:21:59.109 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 11:22:04.502  INFO 22324 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 11:22:04.506 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 11:22:04.506 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 11:22:04.507 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 11:22:04.507 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 11:22:04.508 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 11:22:04.511 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 11:22:04.511 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 11:22:04.511 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 11:22:04.513 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 11:22:04.513 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 11:22:04.513 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 11:22:04.515 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 11:22:04.516 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 11:22:04.516 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 11:22:04.517 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 11:22:04.517  INFO 22324 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 11:22:06.838  INFO 22324 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 11:22:06.839 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:22:06.839 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 11:22:06.841 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:22:06.841 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:22:06.842 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:22:06.843 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:22:06.854  INFO 22324 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:22:34.697 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 11:22:34.698 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 11:22:34.699 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 11:22:34.699 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 11:22:34.700 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 11:22:34.701 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 11:22:34.701 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getById     : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.published,b.content,b.appreciation, b.first_picture,b.flag,b.share_statement,b.views,b.user_id,b.commentable,b.create_time, b.description,b.tag_ids, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and b.id = ? 
2021-01-25 11:22:34.701 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getById     : ==> Parameters: 13(Long)
2021-01-25 11:22:34.703 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getById     : <==      Total: 1
2021-01-25 11:24:52.223 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getType     : ==>  Preparing: select * from t_type where id = ? 
2021-01-25 11:24:52.223 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getType     : ==> Parameters: 2(Long)
2021-01-25 11:24:52.224 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getType     : <==      Total: 1
2021-01-25 11:24:52.225 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:24:52.225 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:24:52.225 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:24:52.227 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.updateBlog  : ==>  Preparing: update t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?,tag_ids = ?, commentable = ? ,update_time = now() where id = ?; 
2021-01-25 11:24:52.229 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.updateBlog  : ==> Parameters: true(Boolean), 原创(String), Spring框架(String), # 第一章：Spring核心IOC

## 1、企业级系统特点

企业级系统

> 大规模：用户数量多、数据规模大、功能众多（天猫，淘宝，京东，苏宁等）
>
> 性能和安全要求高 (用户信息的高安全性，代码的安全性等)
>
> 业务复杂（业务复杂度提高，简单的下单可能用到各种业务判断和逻辑，调用各种接口等）
>
> 灵活应变（业务不是固定的，需要经常改变业务代码或者实现各种功能，要求快速高效）



EJB框架：重量级框架，服务器端框架，学习EJB的高昂代价，和极低的开发效率，极高的资源消耗，都造成了EJB的使用困难，且不利于项目迁移，不能再主流web容器中运行等



Spring容器取代了原有的EJB容器，因此以Spring框架为核心的应用无须EJB容器支持，可以在Web容器中运行，而可以理解为EJB需要EJB提供的容器才能进行部署。

Spring容器管理的不再是复杂的EJB组件，而是POJO（Plain Old Java Object） Bean。



## 2、Spring简介

### 2.1、什么是Spring

> Spring是一个开源框架，Spring是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson 在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为了解决企业应用开发的复杂性而创建的。
>
> 框架的主要优势之一就是其分层架构，分层架构允许使用者选择使用哪一个组件，同时为 J2EE 应用程序开发提供集成的框架。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从Spring中受益。Spring的核心是控制反转（IoC）和面向切面（AOP）。简单来说，Spring是一个分层的JavaSE/EE full-stack(一站式) 轻量级开源框架。

特点：

- Spring是一个开源框架


- Spring为简化企业级开发而生，使用Spring开发可以将Bean对象，Dao组件对象，Service组件对象等交给Spring容器来管理，这样使得很多复杂的代码在Spring中开发却变得非常的优雅和简洁，有效的降低代码的耦合度，极大的方便项目的后期维护、升级和扩展。


- Spring是一个IOC(DI)和AOP容器框架。

### 2.2、Spring体系结构

​    Spring一共有越20个组件，但是真正的核心组件只有几个，我们一起来看下Spring框架的总体架构图，了解一下他的体系结构。

> ​    1层次 核心容器
>
> ​        Beans--管理javabean
>
> ​        Core--核心
>
> ​        Context--上下文配置
>
> ​        expression language -- 表达式语言
>
> ​    2层次 面向切面
>
> ​        AOP--面向切面编程
>
> ​        Aspects--切面，AOP的框架
>
> ​    3层次 数据访问
>
> ​        jdbc--数据库开发
>
> ​        orm--整合hibernate，包括对mybatis持久化框架的支持
>
> ​        Transactions--事务管理，很重要
>
> ​        Struts--整合Struts框架
>
> ​    4层次 
>
> ​        整合Junit单元测试
>
> ​        web--支持web开发，就是后面的MVC框架

Spring框架的核心组件只有三个：Core、Context和Beans。他们构建起了整个Spring的骨骼架构，没有他们就不可能有AOP、Web等上层的特性功能。上面这些是Spring特性功能。

比较重要的几个包：

> AOP包(主要提供面向切面编程的实现)，
>
> Web(主要提供了Web应用开发的支持及针对Web应用的MVC思想实现) 、
>
> ORM（为我们之前学的Hibernate，以及Mybatis这类持久化框架提供支持）、
>
> 还有Spring MVC（这个是它自带的一个web视图层，可以替代到Sturts2，后面还会详细的学习这个SpringMVC框架）。。等等，其中最最核心的就是AOP和下面Spring核心包，也是我们学习的重点。



## 3、Spring设计理念

​    Spring是面向Bean的编程，就是面向java实体，没有实体，Spring框架的意义也就没了

​    Context:Spring的运行环境，代表上下文，负责运行和管理实体对象

​    Core:Spring的核心，可以看做是提供的各种工具类

​    比作演出：Beans是演员，Context是舞台环境，Core是服装和道具

​    Spring 两大核心技术

> ​     控制反转(IoC：Inversion of Control )/依赖注入(DI：Dependency Injection )
>
> ​     面向切面编程(AOP：Aspect Oriented Programming)



## 4、Spring的优良特性

> [1]非侵入式：基于Spring开发的应用中的对象可以不依赖于Spring的API(看是不是必须要实现其接口或者继承某些类)
>
> [2]依赖注入特性将组件关系透明化(对象之间，由IoC容器管理调用)，降低了耦合度
>
> ​                控制反转：IOC——Inversion of Control，指的是将对象的创建权交给Spring去创建。使用Spring之前，对象的创建都是由我们自己在代码中new创建。而使用Spring之后。对象的创建都是由给了Spring框架。
>
> ​                依赖注入：DI——Dependency Injection，是指依赖的对象不需要手动调用setXX方法去设置，而是通过配置赋值。
>
> [3]面向切面编程：Aspect Oriented Programming——AOP，允许将通用任务进行集中式处理，可以将日志处理，事务处理等抽离出来，单独处理
>
> [4]与第三方框架的良好整合，使现有技术更加易用,推进编码最佳实践--写更少的代码实现更多的功能



## 5、实现spring的helloworld

5.1、 新建java项目

通过官网下载spring的包，地址：https://repo.spring.io/release/org/springframework/spring/

下载对应版本，是dist.zip包，解压后，使用的主要jar包为：

> 4个核心jar包（beans、core、context、expression对应的jar包，其它的都不需要（doc和source的jar不能放，会报错）） + 1个依赖（commons-loggins…jar，这个是因为core包中做了很多日志相关的东西，日志就用到了这个包里面的内容）

5.2、新建一个lib目录，然后将下载的jar放到lib下面，选中所有，右击添加build path即可

5.3、创建xml配置文件applicationContext.xml，习惯上是这个名字

5.4、新建包，com.kgc.spring.beans，新建Person类，属性name，工具获取getset方法，toString方法，然后编写普通方法sayHi

```java
		public class Person {
            private String who;

            public String getWho() {
                return who;
            }

            public void setWho(String who) {
                this.who = who;
            }

            /**
             * 自定义一个普通打招呼的方法
             */
            public void sayHi(){
                System.out.println("My Name Is :" + who);
            }
        }
```



5.5、Spring配置文件内容如下：

```xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 
		bean标签：声明一个需要spring的IOC容器帮我们创建的实例对象
			id属性：实例对象的别名
			class属性：指定创建哪个类（JavaBean）的实例对象-类的全类名
	 -->
	<bean id="person" class="com.kgc.spring.beans.Person">
		<!-- property子标签：给创建的实例对象中的属性赋值，实际使用反射调用setter方法 -->
		<property name="who">
			<!-- 可以处理特殊字符（<![CDATA[包含特殊符号内容]]） -->
			<value>HelloSpring</value>
		</property>
		<!-- value属性中如果包含特殊字符，必须转义 -->
		<!-- <property name="who" value="HelloWorld"/> -->
	</bean>
</beans>

```

5.6、编写代码获取HelloSpring实例，依赖junit单元测试

```java
		public class HelloSpringTest {
                @Test
                public void helloSpring() {
                    // 通过ClassPathXmlApplicationContext实例化Spring的上下文IOC容器对象
                    ApplicationContext context = new ClassPathXmlApplicationContext(
                            "applicationContext.xml");
                    // 通过ApplicationContext的getBean()方法，根据id（配置的id对应）来获取bean的实例
                    Person person = (Person) context.getBean("person");
                    // 执行print()方法
                    person.sayHi();
                }
            }
```

执行main方法就可以输出内容了



## 6、什么是IOC

> 为什么要用IOC:
>
> 现有开发创建类的实例是通过new创建的，高耦合，new一个类要了解类所有，且不利于代码扩展和修改
>
> IoC 全称为 Inversion of Control，翻译为 “控制反转”（可以理解为整体思想），它还有一个别名为 DI（Dependency Injection）,即依赖注入(定义接收资源的方式，也可以理解为IOC的具体实现)。
>
> 整个 IoC 理论的核心:
>
> ​        所谓 IOC ，就是由 Spring IOC 容器来负责对象的生命周期和对象之间的关系
>
> ​        如何理解“控制反转”好呢？理解好它的关键在于我们需要回答如下四个问题：
>
> ​        谁控制谁
>
> ​        控制什么
>
> ​        为何是反转
>
> ​        哪些方面反转了
>
> ​        在回答这四个问题之前，我们先看 IOC 的定义：
>
> ​        上面这句话是。如何来理解这句话？我们引用一个例子来走阐述
>
> ​        已找女朋友为例（对于程序猿来说这个值得探究的问题）。一般情况下我们是如何来找女朋友的呢？首先我们需要根据自己的需求（漂亮、身材好、性格好）找一个妹子，然后到处打听她的兴趣爱好、微信、电话号码，然后各种投其所好送其所要，最后追到手
>
> ​        这就是我们通常做事的方式，如果我们需要某个对象，一般都是采用这种直接创建的方式(new BeautifulGirl())，这个过程复杂而又繁琐，而且我们必须要面对每个环节，同时使用完成之后我们还要负责销毁它，在这种情况下我们的对象与它所依赖的对象耦合在一起。
>
> ​        其实我们需要思考一个问题？我们每次用到自己依赖的对象真的需要自己去创建吗？我们知道，我们依赖对象其实并不是依赖该对象本身，而是依赖它所提供的服务，只要在我们需要它的时候，它能够及时提供服务即可，至于它是我们主动去创建的还是别人送给我们的，其实并不是那么重要。再说了，相比于自己千辛万苦去创建它还要管理、善后而言，直接有人送过来是不是显得更加好呢？
>
> ​        这个给我们送东西的“人” 就是 IoC，在上面的例子中，它就相当于一个婚介公司，作为一个婚介公司它管理着很多男男女女的资料，当我们需要一个女朋友的时候，直接跟婚介公司提出我们的需求，婚介公司则会根据我们的需求提供一个妹子给我们，我们只需要负责谈恋爱，生猴子就行了。你看，这样是不是很简单明了。
>
> ​        诚然，作为婚介公司的 IoC 帮我们省略了找女朋友的繁杂过程，将原来的主动寻找变成了现在的被动接受（符合我们的要求），更加简洁轻便。你想啊，原来你还得鞍马前后，各种巴结，什么东西都需要自己去亲力亲为，现在好了，直接有人把现成的送过来，多么美妙的事情啊。所以，简单点说，IoC 的理念就是让别人为你服务
>
> ​        在没有引入 IoC 的时候，被注入的对象直接依赖于被依赖的对象，有了 IoC 后，两者及其他们的关系都是通过 Ioc Service Provider 来统一管理维护的。被注入的对象需要什么，直接跟 IoC Service Provider 打声招呼，后者就会把相应的被依赖对象注入到被注入的对象中，从而达到 IOC Service Provider 为被注入对象服务的目的。所以 IoC 就是这么简单！原来是需要什么东西自己去拿，现在是需要什么东西让别人（IOC Service Provider）送过来
>
> ​        现在在看上面那四个问题，答案就显得非常明显了:
>
> ​            谁控制谁：在传统的开发模式下，我们都是采用直接 new 一个对象的方式来创建对象，也就是说你依赖的对象直接由你自己控制，但是有了 IOC 容器后，则直接由 IoC 容器来控制。所以“谁控制谁”，当然是 IoC 容器控制对象。
>
> ​            控制什么：控制对象。
>
> ​            为何是反转：没有 IoC 的时候我们都是在自己对象中主动去创建被依赖的对象，这是正转。但是有了 IoC 后，所依赖的对象直接由 IoC 容器创建后注入到被注入的对象中，依赖的对象由原来的主动获取变成被动接受，所以是反转。
>
> ​            哪些方面反转了：所依赖对象的获取被反转了。
>
> ​    所谓依赖注入，就是由IOC容器在运行期间，动态地将某种依赖关系注入到对象之中。
>
> ​    所以，依赖注入(DI)和控制反转(IOC)是从不同的角度的描述的同一件事情，就是指通过引入IOC容器，利用依赖关系注入的方式，实现对象之间的解耦。
>
> ​    工厂模式，类似领养宠物，根据不同的宠物类名或者类型，获取不同的对象，即可以根据不同的对象名称，获取不同的对象实例，被动接受，而非主动创建。



## 7、WEB实现的示例：

新建项目web项目，选择jdk，tomcat版本后，创建完成，然后项目右击，属性Properties，打开窗口的，Project Facets，然后勾选spring的依赖，如果不是MyEclipse，那就需要自己添加了，使用都一样

#### 1）新建包com.kgc.spring和类Person，跟上面一样

#### 2）编写配置文件

新建source folder — resources（如果直接建普通目录，不能直接读取，必须手动添加）

将applicationContext.xml，移动到resources目录下

文件内容如下：

```xml
	 <?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
                <!-- 配置bean 
                      配置方式:  基于xml的方式 ,使用的全类名的方式.
                     <bean>: 受Spring管理的一个javaBean对象. 
                        id:  <bean>的唯一标识. 在整个IOC容器中唯一不重复. 
                        class: 指定javaBean的全类名. 目的是通过反射创建对象。 
                               Class cls = Class.forName("com.kgc.spring.helloWorld.Person");
                               Object obj = cls.newInstance();   必须提供无参数构造器. 
                     <property>: 给对象的属性赋值
                        name: 指定属性名  , 指定set风格的属性名. 如果将实体中的set方法名改为setWho2,此配置就会直接报错了。
                        value:指定属性值     
                -->
                <bean id="person" class="com.kgc.spring.Person">
                    <!-- property元素用来为实例的属性赋值,此处实际是调用setWho()方法实现赋值操作 -->
                    <property name="name">
                        <!-- 此处将字符串"Spring"赋值给who属性 -->
                        <value>HelloSpring</value>
                    </property>
                </bean>
            </beans>
```

#### 3）编写代码获取HelloSpring实例

```java
public class HelloSpringTest {
            @Test
            public void helloSpring() {
                // 通过ClassPathXmlApplicationContext实例化Spring的上下文
                ApplicationContext context = new ClassPathXmlApplicationContext(
                        "applicationContext.xml");
                // 通过ApplicationContext的getBean()方法，根据id（配置的id对应）来获取bean的实例
                Person person = (Person) context.getBean("person");
                // 执行sayHello方法
                person.sayHello();
            }

        }
```

#### 4）Spring中IOC容器的实现

> 1）在通过IOC容器读取Bean的实例之前，需要先将IOC容器本身实例化。
> 2）Spring提供了IOC容器的两种实现方式
>
① BeanFactory：IOC容器的基本实现，是Spring内部的基础设施，是面向Spring本身的，不是提供给开发人员使用的。
② ApplicationContext：BeanFactory的子接口，提供了更多高级特性。面向Spring的使用者，几乎所有场合都使用ApplicationContext而不是底层的BeanFactory。

> **ApplicationContext的主要子接口**
>
>  ConfigurableApplicationContext
>
> 1)  是ApplicationContext的子接口，包含一些扩展方法
> 2)  refresh()和close()让ApplicationContext具有启动、关闭和刷新上下文的能力。
>
> WebApplicationContext
> 1)  专门为WEB应用而准备的，它允许从相对于WEB根目录的路径中完成初始化工作 
>
> 
>
> **ApplicationContext的主要实现类**
>
> 1)  ClassPathXmlApplicationContext：对应类路径（src）下的XML格式的配置文件(类路径就是编译后的bin路径，可以看编译目录，看文件位置)
> 2)  FileSystemXmlApplicationContext：对应文件系统（磁盘中）中的XML格式的配置文件
> 3)  在初始化时就创建单例的bean，也可以通过配置的方式指定创建的Bean是多实例的。



#### 5）bean对象获取方式

方式一：通过ApplicationContext的getBean()方法，根据id（配置的id对应）来获取bean的实例

```
Person person = (Person) context.getBean("person");
```

方式二：通过ApplicationContext的getBean()方法，根据具体类型来获取bean的实例

```
Person person = context.getBean(Person.class);
```

```
这个是通过配置文件的配置全类名进行获取实体对象，如果多个同类型的bean，会报错
```

方式三：通过ApplicationContext的getBean()方法，根据id值+具体类型来获取bean的实例

```
Person person = context.getBean("person", Person.class);
```



#### 6）依赖注入的两种方式

##### 1） 通过bean的setter方法赋值

##### 2） 通过bean的构造器赋值

```xml
小结：
            设值注入和构造注入的区别：
                设值注入-习惯使用
                    通过setter访问器实现
                    时效性差
                    灵活性好，但setter方法数量较多
                    通过无参构造实例化
                构造注入
                    通过构造方法实现
                    时效性好
                    灵活性差，仅靠重载限制太多
                    通过匹配的构造方法实例化，但建议保留无参构造
```

#### 7）p命名空间注入属性值

为了简化XML文件的配置，越来越多的XML文件采用属性而非子元素配置信息。Spring从2.5版本开始引入了一个新的p命名空间，可以通过<bean>元素属性的方式配置Bean 的属性。
使用p命名空间后，基于XML的配置方式将进一步简化。

 p 命名空间的特点：使用属性而不是子元素的形式配置Bean的属性，从而简化了配置代码，注意是setter注入，不是构造注入。

```
对于直接量（基本数据类型、字符串）属性：p:属性名="属性值"
```

```
对于引用Bean的属性：p:属性名-ref="Bean的id"
```

#### 8）可以使用的值，即不同数据类型注入，了解

```xml
字面量(可以使用字符串标识的值，就叫字面量)
        1)  可以使用字符串表示的值，可以通过value属性或value子节点的方式指定
        2)  基本数据类型及其封装类、String等类型都可以采取字面值注入的方式
        3） 若字面值中包含特殊字符，可以使用<![CDATA[]]>把字面值包裹起来
```

#### 9）引用其他的bean

配置文件中，引入已经存在的bean，比如Person中，存在car的实体类型属性

```xml
		<!-- 引用其他的bean，这个只能是IOC容器内的，不能找外面的 -->
         <bean id="person" class="com.kgc.spring.Person">
            <!-- car不能使用value了，使用ref关联最初的那个配置car -->
            <property name="car"  ref="car"></property>
         </bean>
```

##### 1、内部bean的使用

修改spring配置文件

```xml
			<!-- 内部bean -->
             <bean id="person1" class="com.kgc.spring.di.Person">
                <property name="car">
                    <!-- 内部bean 只能 在内部使用，没有必要配置id了.  -->
                    <bean class="com.kgc.spring.di.Car">
                        <property name="brand" value="Mini"></property>
                        <property name="crop" value="宝马"></property>
                        <property name="price" value="300000"></property>
                    </bean>
                </property>
             </bean>
```



##### 2、给级联属性赋值

```xml
		还是在Person对象中引用其他bean汽车Car的第一个示例，<bean>标签内的
		<property name="car"  ref="car"></property>
        
		后增加如下配置
		
		<!-- 给级联属性赋值-->
        <property name="car.speed" value="280"></property>

        再运行单元测试testRef，看结果，新的值就有了
```

#### 10）集合属性注入

在Spring中可以通过一组内置的XML标签来配置集合属性，例如：<list>，<set>或<map>。

```xml
1）数组和List
      配置java.util.List类型的属性，需要指定<list>标签，在标签里包含一些元素。
      这些标签
      可以通过<value>指定简单的常量值，通过<ref>指定对其他Bean的引用。
      通过<bean>指定内置bean定义。通过<null/>指定空元素。甚至可以内嵌其他集合。

      数组的定义和List一样，都使用<list>元素。

      配置java.util.Set需要使用<set>标签，定义的方法与List一样。

                    <property name="list">
                        <!-- 构造集合 -->
                        <list>
                            <!--<bean> 
                                如果没有，可以使用内部bean类写多个 <ref/>如果是事先有了注入的bean了，就可以直接指向
                            -->
                            <ref bean="bean1"/>
                            <ref bean="bean2"/>
                            <ref bean="bean3"/>
                        </list>
                        
                        <!-- <array></array> 这个不建议使用，直接用list即可 ，既可以给list，也可以给数组赋值-->
                        <!-- <set></set> -->
                    </property>

            
2）Map集合
            Java.util.Map通过<map>标签定义，<map>标签里可以使用多个<entry>作为子标签。每个条目包含一个键和一个值。 

            必须在<key>标签里定义键。

            因为键和值的类型没有限制，所以可以自由地为它们指定<value>、<ref>、<bean>或<null/>元素。

            当然也可以将Map的键和值作为<entry>的属性定义：简单常量使用key和value来定义；bean引用通过key-ref和value-ref属性定义。

                <!-- Map集合 -->
                 <bean id="map" class="类全类名">
                    <property name="map" >
                        <!-- 构造map -->
                        <map>
                            <entry key="AA"  value-ref="bean1"></entry>               
                            <entry key="BB"  value-ref="bean2"></entry>
                            <entry key="CC"  value-ref="bean"></entry>
                        </map>
                    </property>
                 </bean>

3）集合类型bean

        按上面类内引用的集合对象（如personList的配置），如果只能将集合对象配置在某个bean内部，则这个集合的配置将不能重用。我们需要 将集合bean的配置拿到外面，供其他bean引用。

        配置集合类型的bean需要引入util名称空间
        修改spring配置文件spring-di.xml，增加头信息引入util命名空间，加载在beans标签内，跟beans类似
        xmlns:util="http://www.springframework.org/schema/util" 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd

        配置内容
            <!-- 集合Bean -->
             <util:list id="listBean">
                <ref bean="bean1"/>
                <ref bean="bean2"/>
                <ref bean="bean3"/>
                <!-- <bean>
                </bean> -->
             </util:list>

		使用：

            <property name="list" ref="listBean"></property>
```

#### 11）工厂bean的使用

```xml
Spring中有两种类型的bean，一种是普通bean，另一种是工厂bean，即FactoryBean。

     工厂bean跟普通bean不同，其返回的对象不是指定类的一个实例，其返回的是该工厂bean的getObject方法所返回的对象。
     
     工厂bean必须实现org.springframework.beans.factory.FactoryBean接口。

```

```xml
BeanFactory  与  FactoryBean的区别?，这二者没有任何关系，相当于两个概念
```

```xml
类似于：
	Collection  与 Collections 的区别 
	Final   finally   的区别
```

#### 12）bean的高级配置：bean与bean的关系，了解

#### 13）bean的作用域 * 

在Spring中，可以在<bean>元素的scope属性里设置bean的作用域，以决定这个bean是单实例的还是多实例的。

默认情况下，Spring只为每个在IOC容器里声明的bean创建唯一一个实例，整个IOC容器范围内都能共享该实例：所有后续的getBean()调用和bean引用都将返回这个唯一的bean实例。该作用域被称为singleton，它是所有bean的默认作用域。

```xml
        <!-- 
                bean的作用域:
                    singleton: 单例的(默认值), 在整个IOC容器中只能存在一个bean的对象. 而且在IOC
                                              容器对象被创建时，就创建单例的bean的对象. 后续每次通过getBean()方法
                                               获取bean对象时，返回的都是同一个对象.  
                    prototype: 原型的/多例的       在整个IOC容器中可有多个bean的对象。 在IOC容器对象被
                                   创建时， 不会创建原型的bean的对象。 而是等到每次通过getBean()方法获取
                               bean对象时，才会创建一个新的bean对象返回.

                    request:   一次请求对应一个bean对象，只在web环境中有效
                    session:   一次会话对应一个bean对象，只在web环境中有效
        -->
```

13）bean的生命周期

```xml
	1)  Spring IOC容器可以管理bean的生命周期，Spring允许在bean生命周期内特定的时间点执行指定的任务。
    2)  Spring IOC容器对bean的生命周期进行管理的过程：
        ① 通过构造器或工厂方法创建bean实例
        ② 为bean的属性设置值和对其他bean的引用
        ③ 调用bean的初始化方法
        ④ bean可以使用了
        ⑤ 当容器关闭时，调用bean的销毁方法
    3） 在配置bean时，通过init-method和destroy-method 属性为bean指定初始化和销毁方法
```

#### 14）bean的后置处理器

```xml
1)  bean的后置处理器
    ① bean后置处理器允许在调用初始化方法前后对bean进行额外的处理
    ② bean后置处理器对IOC容器里的所有bean实例逐一处理，而非单一实例。其典型         
		应用是：检查bean属性的正确性或根据特定的标准更改bean的属性。
    ③ bean后置处理器时需要实现接口：
    
    org.springframework.beans.factory.config.BeanPostProcessor。在初始化方法被调用前后，Spring将把每个bean实例分别传递给上述接口的以下两个方法：
        postProcessBeforeInitialization(Object, String)
        postProcessAfterInitialization(Object, String)

2)  添加bean后置处理器后bean的生命周期变为7个了
    ①通过构造器或工厂方法创建bean实例
    ②为bean的属性设置值和对其他bean的引用
    ③将bean实例传递给bean后置处理器的postProcessBeforeInitialization()方法
    ④调用bean的初始化方法
    ⑤将bean实例传递给bean后置处理器的postProcessAfterInitialization()方法
    ⑥bean可以使用了
    ⑦当容器关闭时调用bean的销毁方法
```



#### 15）使用spring配置数据源连接池

c3po（连接池管理包c3p0-0.9.1.jar）和mysql的连接数据库驱动包加入到项目中

增加配置

```xml
    <?xml version="1.0" encoding="UTF-8"?>
        <beans xmlns="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
            
            <!-- 直接配置c3p0连接池    ComboPooledDataSource 连接池对象 -->
            <bean id ="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
                <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mysql"></property>
                <property name="user" value="root"></property>
                <property name="password" value="1234"></property>
                <property name="initialPoolSize" value="5"></property>   
                <property name="maxPoolSize" value="10"></property>
            </bean>

        </beans>
```

```xml
注意:
	使用外部properties文件
    key要加上一个前缀，防止出错，因为spring加载配置的时候，会将配置的解析信息放到跟电脑的系统变量一起，可能导致获取的值是系统的，而不是配置的，要注意。

    修改spring的配置文件，注释掉直接配置方式，增加如下内容

     <!-- 通过引入外部的属性文件配置c3p0连接池 -->
     <!-- 引入外部的属性文件 -->
     <!-- 推荐写法：增加context命名空间-->
         <context:property-placeholder location="classpath:db.properties"/>

         <!-- 配置c3p0连接池 -->
         <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="driverClass" value="${jdbc.driver}"></property>
            <property name="jdbcUrl" value="${jdbc.url}"></property>
            <property name="user" value="${jdbc.username}"></property>
            <property name="password" value="${jdbc.password}"></property>
         </bean>
```

## 8、Spring的自动装配

### 1）xml装配bean

```xml
    自动装配的概念
        手动装配：以value或ref的方式明确指定属性值都是手动装配。
        自动装配：根据指定的装配规则，不需要明确指定，Spring自动将匹配的属性值注入bean中。

    装配模式
        1）根据类型自动装配：将类型匹配的bean作为属性注入到另一个bean中。若IOC容器中有多个与目标bean类型一致的bean，Spring将无法判定哪个bean最合适该属性，不能执行自动装配。

		byType: 使用bean的属性的类型与IOC容器中<bean>的class进行匹配。 如果唯一匹配则装配成功，如果匹配到多个兼容类型的bean，则抛出异常。

        2）根据名称自动装配：必须将配置的目标bean的id名称和类的属性名设置的完全相同
        
		byName: 使用bean的属性名与IOC容器中<bean>的id值进行匹配. 匹配成功则装配成功. 不成功则不装配。
          
    建议：
         在项目中更多的使用注解的方式实现，xml配置的方式基本不用，了解原理即可。
```

### 2）注解装配bean：

相对于XML方式，通过注解的方式配置bean更加简洁和优雅，而且和MVC组件化开发的理念十分契合，是开发中常用的使用方式。

```xml
    常用注解：
        1)  普通组件：@Component
                标识一个受Spring IOC容器管理的控制层组件
        2)  持久化层组件：@Repository
                标识一个受Spring IOC容器管理的持久化层组件
        3)  业务逻辑层组件：@Service
                标识一个受Spring IOC容器管理的业务逻辑层组件
        4)  控制层/表述层控制器组件：@Controller
                标识一个受Spring IOC容器管理的表述层控制器组件

        5)  组件命名规则
            ①默认情况：使用组件的简单类名首字母小写后得到的字符串作为bean的id
            ②使用组件注解的value属性指定bean的id

            注意：
            	事实上Spring并没有能力识别一个组件到底是不是它所标记的类型
            	即使将@Respository注解用在一个表述层控制器组件上面也不会产生任何错误
            	所以@Respository、@Service、@Controller这几个注解
            	仅仅是为了让开发人员自己明确当前的组件扮演的角色，在使用上基本是没有区别的。

--------------------------配置组件扫描-------------------------
				<!-- 
                    组件扫描:  扫描加了注解的类，并管理到IOC容器中 
                    base-package: 基包. Spring会扫描指定包以及子包下所有的类，将带有注解的类管理到IOC容器中
                -->
                <context:component-scan base-package="com.kgc.spring.annotation"></context:component-scan>

--------------------------指定扫描和排除扫描-------------------------

    如果想要某个组件不让IOC管理，spring也提供了对应的处理

    ------指定扫描------

        <!-- 指定扫描  
                设置父属性：use-default-filters="false" -->
        <context:component-scan base-package="com.kgc.spring.annotation" use-default-filters="false">

        增加context:component-scan的子节点：

        <!-- 按照注解方式进行指定，注意type和expression（注解的全类名） -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

        或者

        <!-- 按照指定类进行指定，注意type和expression（具体类的全类名） -->
        <context:include-filter type="assignable" expression="com.kgc.spring.annotation.controller.xxxController"/>


    ------排除扫描------

        <!-- 排除扫描   
                设置父属性：use-default-filters="true" 这个是默认值 -->
        <context:component-scan base-package="com.kgc.spring.annotation" use-default-filters="true">

        <!-- 按照注解方式进行指定，注意type和expression（注解的全类名） -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        
        或者

        <!-- 按照指定类进行指定，注意type和expression（具体类的全类名） -->
        <context:exclude-filter type="assignable" expression="com.kgc.spring.annotation.controller.xxxController"/>


-----------使用注解自动装配：@Autowired注解-----------

    IOC的特点就是，同一个容器中的对象，我只要告诉当前bean对象，需要谁，然后就自动给我了，所以这个时候要使用一个新的主键@Autowired

-----------@Autowired注解的工作机制-----------
    /**
     *  @Autowired 完成bean属性的自动装配
     *  
     *  工作机制:  
        1）首先会使用byType的方式进行自动装配，如果能唯一匹配，则装配成功， 如果匹配到多个兼容类型的bean,还会尝试使用byName的方式进行唯一确定，如果能唯一确定，则装配成功，如果不能唯一确定，则装配失败，抛出异常. 
     *  
     *  2）默认情况下， 使用@Autowired标注的属性必须被装配，如果装配不了，会抛出异常. 
     *  
        3）可以使用required=false来设定不是必须要被装配. 
     *  
     *  4）如果匹配到多个兼容类型的bean，可以使用@Qualifier来进一步指定要装配的bean的id值。
     *  
     *  5）@Autowired @Qualifier 注解即可在成员变量上，也可以加在对应的set方法上。 
     *  
     */

```
## 9、详细案例见课堂项目代码



# 第二章：Spring核心AOP

## 1、AOP的定义和原理

AOP的目标：让我们可以“专心做事”
AOP原理
将复杂的需求分解出不同方面，将散布在系统中的公共功能集中解决
采用代理机制组装起来运行，在不改变原程序的基础上对代码段进行增强处理，增加新的功能

前奏，问题引入

情景：数学计算器 

```java
	1)  要求
            ①执行加减乘除运算
            ②日志：在程序执行期间追踪正在发生的活动（举例，线上出问题不能停业务的）
            
    2） 代码示例
        新建包：com.kgc.spring.aop.before
        新建计算器接口
            /**
             * 算数计算器
             *
             */
            public interface ArithmeticCalculator {
                
                public int add(int a ,int b );
                
                public int sub(int a, int b );
                
                public int mul(int a ,int b );
                
                public int div(int a, int b );
            }

        创建实现类
            public class ArithmeticCalculatorImpl implements ArithmeticCalculator {

                @Override
                public int add(int a, int b) {
                    System.out.println("日志处理---->这个是加法运算开始，参数[" + a + "," + b + "]");
                    int result = a + b;
                    System.out.println("日志处理---->这个是加法运算结束，结果[" + result + "]");
                    return result;
                }

                @Override
                public int sub(int a, int b) {
                    System.out.println("日志处理---->这个是减法运算开始，参数[" + a + "," + b + "]");
                    int result = a - b;
                    System.out.println("日志处理---->这个是减法运算结束，结果[" + result + "]");
                    return result;
                }

                @Override
                public int mul(int a, int b) {
                    System.out.println("日志处理---->这个是乘法运算开始，参数[" + a + "," + b + "]");
                    int result = a * b;
                    System.out.println("日志处理---->这个是乘法运算结束，结果[" + result + "]");
                    return result;
                }

                @Override
                public int div(int a, int b) {
                    System.out.println("日志处理---->这个是除法运算开始，参数[" + a + "," + b + "]");
                    int result = a / b;
                    System.out.println("日志处理---->这个是除法运算结束，结果[" + result + "]");
                    return result;
                }

            }
    分析：
        1）代码混乱：越来越多的非业务需求(日志和验证等)加入后，原有的业务方法急剧膨胀。每个方法在处理核心逻辑的同时还必须兼顾其他多个关注点。
        2）代码分散: 以日志需求为例，只是为了满足这个单一需求，就不得不在多个模块（方法）里多次重复相同的日志代码
        3）代码维护难：如果需要修改日志处理。如果日志需求发生变化，必须修改所有模块。
        4）硬编码：为了写代码而写代码，没有任何设计而言
        5）内容耦合：功能和日志就应该是相互区分开的，将日志内容强制加入业务（但是要注意，如果是业务内部，需要增加具体的日志信息，还是需要特别处理的，跟aop没有关系）
```

动态代理的原理

```xml
	代理设计模式的原理：使用一个代理对象将原始对象包装起来，然后用该代理对象取代原始对象。任何对原始对象的调用都要通过代理。代理对象决定是否以及何时将方法调用转到原始对象上。

    比如：身边的微商，真正商家卖东西的就是原始对象，而代理商只是增加了宣传，也可以理解为增强处理

AOP的概述
    1)  AOP(Aspect-Oriented Programming，面向切面编程)：是一种新的方法论，是对传      
    统 OOP(Object-Oriented Programming，面向对象编程)的补充。
    2)  AOP编程操作的主要对象是切面(aspect)，而切面模块化横切关注点（可以理解为功能）。
    在应用AOP编程时，仍然需要定义公共功能，但可以明确的定义这个功能应用在哪里，以什么方式应用，并且不必修改受影响的类。这样一来横切关注点就被模块化到特殊的类里——这样的类我们通常称之为“切面”。
    3)  AOP的好处： 
        ① 每个事物逻辑位于一个位置，代码不分散，便于维护和升级
        ② 业务模块更简洁，只包含核心业务代码
```

## 2、AOP的相关术语

> - 增强（Adivce）：又翻译成通知，定义了切面是什么以及何时使用，描述了切面要完成的工作和何时需要执行这个工作。是织入到目标类连接点上的一段程序代码。增强包含了用于添加到目标连接点上的一段执行逻辑，又包含了用于定位连接点的方位信息。（所以spring提供的增强接口都是带方位名：BeforeAdvice、（表示方法调用前的位置）AfterReturninAdvice、（表示访问返回后的位置）ThrowAdvice等等，所以只有结合切点和增强两者一起才能确定特定的连接点并实施增强逻辑）
>
>
> - 切入点（Pointcut）：Advice定义了切面要发生“故事”和时间，那么切入点就定义了“故事”发生的地点。例如某个类或者方法名，Spring中允许我们使用正则来指定。
>
>
> - 连接点（Joinpoint）：切入点匹配的执行点称作连接点。如果说切入点是查询条件，那连接点就是被选中的具体的查询结果（具体的数据记录）。简单记忆，就是类中的各个方法
>
>
> - 切面（Aspect）：切点和增强组成切面，是封装了各个抽离的功能点的类。Spring AOP就是负责实施切面的框架，它将切面所定义的横切逻辑织入到切面所指定的连接点中
>
>
> - 代理（Proxy）：AOP框架创建的对象。一个类被AOP织入增强之后，就产生了一个结果类，它是融合了原类和增强逻辑的代理类。
>
>
> - 目标对象（Target）：增强逻辑的织入的目标类
>
>
> - 织入（Weaving）：将增强添加到目标类具体连接点上的过程。AOP有三种织入的方式：编译期织入、类装载期织入、动态代理织入（spring采用动态代理织入）
>
>
> - 更好理解：在一个多或多个连接点上，可以将切面的功能（advice）织入到程序的执行过程中

- `Aspect`（切面）： Aspect 声明类似于 Java 中的类声明，在 Aspect 中会包含着一些 Pointcut 以及相应的 Advice。
- `Joint point`（连接点）：表示在程序中明确定义的点，典型的包括方法调用，对类成员的访问以及异常处理程序块的执行等等，它自身还可以嵌套其它 joint point。
- `Pointcut`（切点）：表示一组 joint point，这些 joint point 或是通过逻辑关系组合起来，或是通过通配、正则表达式等方式集中起来，它定义了相应的 Advice 将要发生的地方。
- `Advice`（增强）：Advice 定义了在 `Pointcut` 里面定义的程序点具体要做的操作，它通过 before、after 和 around 来区别是在每个 joint point 之前、之后还是代替执行的代码。
- `Target`（目标对象）：织入 `Advice` 的目标对象.。
- `Weaving`（织入）：将 `Aspect` 和其他对象连接起来, 并创建 `Advice`d object 的过程

让我们来假设一下, 从前有一个叫爪哇的小县城, 在一个月黑风高的晚上, 这个县城中发生了命案. 作案的凶手十分狡猾, 现场没有留下什么有价值的线索. 不过万幸的是, 刚从隔壁回来的老王恰好在这时候无意中发现了凶手行凶的过程, 但是由于天色已晚, 加上凶手蒙着面, 老王并没有看清凶手的面目, 只知道凶手是个男性, 身高约七尺五寸. 爪哇县的县令根据老王的描述, 对守门的士兵下命令说: 凡是发现有身高七尺五寸的男性, 都要抓过来审问. 士兵当然不敢违背县令的命令, 只好把进出城的所有符合条件的人都抓了起来.

来让我们看一下上面的一个小故事和 AOP 到底有什么对应关系.
首先我们知道, 在 Spring AOP 中 `Joint point` 指代的是所有方法的执行点, 而 point cut 是一个描述信息, 它修饰的是 `Joint point`, 通过 point cut, 我们就可以确定哪些 `Joint point` 可以被织入 `Advice`. 对应到我们在上面举的例子, 我们可以做一个简单的类比, **`Joint point` 就相当于 爪哇的小县城里的百姓**,**`pointcut` 就相当于 老王所做的指控, 即凶手是个男性, 身高约七尺五寸**, **而 `Advice` 则是施加在符合老王所描述的嫌疑人的动作: 抓过来审问**.
为什么可以这样类比呢?

- `Joint point` ： 爪哇的小县城里的百姓: 因为根据定义, `Joint point` 是所有可能被织入 `Advice` 的候选的点, 在 Spring AOP中, 则可以认为所有方法执行点都是 `Joint point`. 而在我们上面的例子中, 命案发生在小县城中, 按理说在此县城中的所有人都有可能是嫌疑人.
- `Pointcut` ：男性, 身高约七尺五寸: 我们知道, 所有的方法(joint point) 都可以织入 `Advice`, 但是我们并不希望在所有方法上都织入 `Advice`, 而 `Pointcut` 的作用就是提供一组规则来匹配joinpoint, 给满足规则的 joinpoint 添加 `Advice`. 同理, 对于县令来说, 他再昏庸, 也知道不能把县城中的所有百姓都抓起来审问, 而是根据凶手是个男性, 身高约七尺五寸, 把符合条件的人抓起来. 在这里 凶手是个男性, 身高约七尺五寸 就是一个修饰谓语, 它限定了凶手的范围, 满足此修饰规则的百姓都是嫌疑人, 都需要抓起来审问.
- `Advice` ：抓过来审问, `Advice` 是一个动作, 即一段 Java 代码, 这段 Java 代码是作用于 point cut 所限定的那些 `Joint point` 上的. 同理, 对比到我们的例子中, 抓过来审问 这个动作就是对作用于那些满足 男性, 身高约七尺五寸 的爪哇的小县城里的百姓.
- `Aspect`:：`Aspect` 是 `point cut `与 `Advice` 的组合, 因此在这里我们就可以类比: “根据老王的线索, 凡是发现有身高七尺五寸的男性, 都要抓过来审问” 这一整个动作可以被认为是一个 `Aspect`.

![image-20210120095733581](C:\Users\wanghan\AppData\Roaming\Typora\typora-user-images\image-20210120095733581.png)

**Advice 的类型**

- `before advice`, 在 join point 前被执行的 advice. 虽然 before advice 是在 join point 前被执行, 但是它并不能够阻止 join point 的执行, 除非发生了异常(即我们在 before advice 代码中, 不能人为地决定是否继续执行 join point 中的代码)
- `after return advice`, 在一个 join point 正常返回后执行的 advice
- `after throwing advice`, 当一个 join point 抛出异常后执行的 advice
- `after(final) advice`, 无论一个 join point 是正常退出还是发生了异常, 都会被执行的 advice.
- `around advice`, 在 join point 前和 joint point 退出后都执行的 advice. 这个是最常用的 advice.
- `introduction`，introduction可以为原有的对象增加新的属性和方法。

```xml
说明：
        切面可以理解为由增强处理和切入点组成，既包含了横切逻辑的定义，也包含了连接点的定义。面向切面编程主要关心两个问题，即：在什么位置，执行什么功能。Spring AOP是负责实施切面的框架，即由Spring AOP完成织入工作。
    
用这个能做哪些事情：
    1.Spring声明式事务管理配置。
    2.Controller层的参数校验。
    3.在执行方法前,判断是否具有权限。
    4.对部分函数的调用进行日志记录。监控部分重要函数，若抛出指定的异常，可以以短信或邮件方式通知相关人员。
    5.信息过滤，页面转发等等功能
```

### 2.1、简介

> AspectJ：Java社区里最完整最流行的AOP框架。
>
> 在Spring2.0以上版本中，可以使用基于AspectJ注解或基于XML配置的AOP。

### 2.2、基本用法

#### 2.2.1、核心配置：

```xml
		<?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:aop="http://www.springframework.org/schema/aop"
                xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
                
                <!-- 组件扫描 -->
                <context:component-scan base-package="com.kgc.spring.annotation"></context:component-scan>

                <!-- 基于注解使用AspectJ: 主要的作用是当Spring IOC容器侦测到bean配置文件中的<aop:aspectj-autoproxy>元素时，会自动为 与AspectJ切面匹配的bean创建代理. 默认使用jdk的动态代理，如果要使用cglib的，必须proxy-target-class="true" -->
                <aop:aspectj-autoproxy/>
            </beans>
```

#### 2.2.2、用AspectJ注解@Aspect声明切面

> 1)  要在Spring中声明AspectJ切面，只需要在IOC容器中将切面声明为bean实例。
>
> 2)  当在Spring IOC容器中初始化AspectJ切面之后，Spring IOC容器就会为那些与 AspectJ切面相匹配的bean创建代理。
>
> 3)  在AspectJ注解中，切面只是一个带有@Aspect注解的Java类，它往往要包含很多通知。
>
> 4)  通知是标注有某种注解的简单的Java方法。
>
> 5)  AspectJ支持5种类型的通知注解：
>
> ```java
>     ① @Before：前置通知，在方法执行之前执行
>     ② @After：后置通知，在方法执行之后执行
>     ③ @AfterReturning：返回通知，在方法返回结果之后执行
>     ④ @AfterThrowing：异常通知，在方法抛出异常之后执行
>     ⑥ @Around：环绕通知，围绕着方法执行，可以简单连理为前置，后置，返回和异常的结合体
> ```

#### 2.2.3、切入点表达式

```
   *      * com.kgc.spring.annotation.*.*(..)
```

```java
   *    第一个 * : 任意修饰符 任意返回值
   *    第二个 * : 任意类
   *    第三个 * : 任意方法
   *     .. : 任意参数列表

      这里面如果要获取方法名和参数，那就用到一个连接点对象: JoinPoint（org.aspectj.lang包下的）
```

#### 2.2.4、切面执行优先级

```java
通过注解@Order(值)设置切面的优先级
	默认int类型最大值 2147483647  值越小优先级越高
```

#### 2.2.5、重用切入点表达式

在切面类中，随便定义一个方法，如下

```java
/**
 * 声明切入点表达式
 */
@Pointcut("execution(* com.kgc.spring.aspectJ.annotation.*.*(..))")
public void declarePointCut() {}

使用如下

@After("declarePointCut()")
或
@AfterReturning(value="declarePointCut()",returning="result")

如果想要在其它切面中也使用，不能直接用，必须如下写

        @Before("声明了切入点表达式的切面.declarePointCut()")
        这样就可以了
```

## 3、用xml的方式配置切面-了解，不常用

3.1、概述：

除了使用AspectJ注解声明切面，Spring也支持在bean配置文件中声明切面。这种声明是通过aop名称空间中的XML元素完成的。

正常情况下，基于注解的声明要优先于基于XML的声明。通过AspectJ注解，切面可以与AspectJ兼容，而基于XML的配置则是Spring专有的。由于AspectJ得到越来越多的 AOP框架支持，所以以注解风格编写的切面将会有更多重用的机会。

3.2、配置细节

在bean配置文件中，所有的Spring AOP配置都必须定义在<aop:config>元素内部。对于每个切面而言，都要创建一个<aop:aspect>元素来为具体的切面实现引用后端bean实例。

切面bean必须有一个标识符，供<aop:aspect>元素引用。

3.3、简单示例

```xml
<?xml version="1.0" encoding="UTF-8"?>
            <beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:aop="http://www.springframework.org/schema/aop"
                xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
                
                <!-- 目标对象 -->
                <bean id="arithmeticCalculatorImpl" class="com.kgc.spring.aspectJ.xml.ArithmeticCalculatorImpl"></bean>
                
                <!-- 切面 -->
                <bean id="loggingAspect" class="com.kgc.spring.aspectJ.xml.LoggingAspect"></bean>
                <bean id="validationAspect" class="com.kgc.spring.aspectJ.xml.ValidationAspect"></bean>
                
                <!-- AOP: 切面  通知  切入点表达式 -->
                <aop:config>
                    <!-- 切面 -->
                    <aop:aspect ref="loggingAspect" order="2">
                    
                        <!-- 切入点表达式 -->
                        <aop:pointcut expression="execution(* com.kgc.spring.aspectJ.xml.*.*(..))" id="myPointCut"/>
                    
                        <!-- 通知 -->
                        <aop:before method="beforeMethod"  pointcut-ref="myPointCut"/>
                        <aop:after method="afterMethod"  pointcut-ref="myPointCut"/>
                        <aop:after-returning method="afterReturningMethod" pointcut-ref="myPointCut" returning="result"/>
                        <aop:after-throwing method="afterThrowingMethod" pointcut-ref="myPointCut" throwing="ex"/>
                        
                        <!-- 注释掉，它是上面的合体，所以不用并存 -->
                        <!-- <aop:around method="aroundMethod" pointcut-ref="myPointCut"/> -->
                    
                    </aop:aspect>
                    
                    <aop:aspect ref="validationAspect" order="1">
                        <aop:before method="beforeMethod" pointcut-ref="myPointCut"/>
                    </aop:aspect>
                
                </aop:config>
	</beans>
```

对于around和afterThrowing通知，要想二者兼容，在around的通知里将异常抛出而非打印：

```Java
throw new RuntimeException(throwable);
//    throwable.printStackTrace();
```

## 4、Spring的事务管理

### 4.1、事务概述

> 1)  在JavaEE企业级开发的应用领域，为了保证数据的完整性和一致性，必须引入数据库事务的概念，所以事务管理是企业级应用程序开发中必不可少的技术。
> 2)  事务就是一组由于逻辑上紧密关联而合并成一个整体(工作单元)的多个数据库操作，这些操作要么都执行，要么都不执行。 
> 3)  事务的四个关键属性(ACID)
>
> ```java
> 原子性(atomicity)：“原子”的本意是“不可再分”，事务的原子性表现为一个事务中涉及到的多个操作在逻辑上缺一不可。事务的原子性要求事务中的所有操作要么都执行，要么都不执行。
> ```
>
> ```java
> 一致性(consistency)：“一致”指的是数据的一致，具体是指：所有数据都处于满足业务规则的一致性状态。一致性原则要求：一个事务中不管涉及到多少个操作，都必须保证事务执行之前数据是正确的，事务执行之后数据仍然是正确的。如果一个事务在执行的过程中，其中某一个或某几个操作失败了，则必须将其他所有操作撤销，将数据恢复到事务执行之前的状态，这就是回滚。
> ```
>
> ```java
> 隔离性(isolation)：在应用程序实际运行过程中，事务往往是并发执行的，所以很有可能有许多事务同时处理相同的数据，因此每个事务都应该与其他事务隔离开来，防止数据损坏。隔离性原则要求多个事务在并发执行过程中不会互相干扰。
> ```
>
> ```java
> 持久性(durability)：持久性原则要求事务执行完成后，对数据的修改永久的保存下来，不会因各种系统错误或其他意外情况而受到影响。通常情况下，事务对数据的修改应该被写入到持久化存储器中。
> ```

### 4.2、事务管理的分类：

```java
编程式事务管理
    1)  使用原生的JDBC API进行事务管理
        ①获取数据库连接Connection对象
        ②取消事务的自动提交
        ③执行操作
        ④正常完成操作时手动提交事务
        ⑤执行失败时回滚事务
        ⑥关闭相关资源
    2)  评价
            使用原生的JDBC API实现事务管理是所有事务管理方式的基石，同时也是最典型 的编程式事务管理。编程式事务管理需要将事务管理代码嵌入到业务方法中来控制事务  的提交和回滚。在使用编程的方式管理事务时，必须在每个事务操作中包含额外的事务  管理代码。相对于核心业务而言，事务管理的代码显然属于非核心业务，如果多个模块都使用同样模式的代码进行事务管理，显然会造成较大程度的代码冗余。
    
声明式事务管理
    大多数情况下声明式事务比编程式事务管理更好：它将事务管理代码从业务方法中分离出来，以声明的方式来实现事务管理。
    事务管理代码的固定模式作为一种横切关注点，可以通过AOP方法模块化，进而借助Spring AOP框架实现声明式事务管理。
    Spring在不同的事务管理API之上定义了一个抽象层，通过配置的方式使其生效，从而让应用程序开发人员不必了解事务管理API的底层实现细节，就可以使用Spring的事务管理机制。
    Spring既支持编程式事务管理，也支持声明式的事务管理。
```

### 4.3、Spring提供的事务管理器

```java
    Spring从不同的事务管理API中抽象出了一整套事务管理机制，让事务管理代码从特定的事务技术中独立出来。开发人员通过配置的方式进行事务管理，而不必了解其底层是如何实现的。
    Spring的核心事务管理抽象是PlatformTransactionManager。它为事务管理封装了一组独立于技术的方法。无论使用Spring的哪种事务管理策略(编程式或声明式)，事务管理器都是必须的。
    事务管理器可以以普通的bean的形式声明在Spring IOC容器中。

事务管理器的主要实现
    1)  DataSourceTransactionManager：在应用程序中只需要处理一个数据源，而且通过JDBC存取。
    2)  JtaTransactionManager：在JavaEE应用服务器上用JTA(Java Transaction API)进行事务管理，基本不用
    3)  HibernateTransactionManager：用Hibernate框架存取数据库，不涉及
```

### 4.4、配置spring数据源

```xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:tx="http://www.springframework.org/schema/tx"
                xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
                
                <context:component-scan base-package="com.kgc.spring.tx.annotation"></context:component-scan>
                
                <!-- 数据源 -->
                <context:property-placeholder location="classpath:db.properties"/>
                <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                    <property name="driverClass" value="${jdbc.driver}"></property>
                    <property name="jdbcUrl" value="${jdbc.url}"></property>
                    <property name="user" value="${jdbc.username}"></property>
                    <property name="password" value="${jdbc.password}"></property>
                </bean>
                <!-- JdbcTemplate -->
                <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
                    <property name="dataSource" ref="dataSource"></property>
                </bean>
</beans>                       
```

### 4.5、配置spring的事务管理器

```xml
	<!-- 事务管理器 -->
            <bean id="dataSourceTransactionManager"
                 class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                 <!-- 管住事务就要先管住数据源连接 -->
                <property name="dataSource" ref="dataSource"></property>
            </bean>
            
            <!-- 开启事务注解 
                transaction-manager 用来指定事务管理器， 如果事务管理器的id值 是 transactionManager，可以省略不进行指定。 
            -->
            <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
```

### 4.6、Spring事务注解用法

```java
@Transactional注解支持两种方式

        一种是在方法上，只对当前方法生效，优先级高于类上面的

        一种是在类上面，对当前类中所有的方法都起作用
```

### 4.7、事务属性:

```java
		/**
         * 
         *   1. 事务的传播行为 propagation: 一个事务方法被另外一个事务方法调用时，当前的事务如何使用事务. 
         *          Propagation.REQUIRED  默认值.  使用调用者的事务（全程一个事务）. 
         *          Propagation.REQUIRES_NEW     将调用者的事务挂起, 重新开启事务来使用. 

            如：@Transactional(propagation=Propagation.REQUIRES_NEW)

         *   2. 事务的隔离级别 isolation
         *          1    读未提交      脏读（读取别的事务没有提交的数据）
         *          2    读已提交      不可重复读（两次读取的数据不一致）
         *          4    可重复读（mysql默认）      幻读（两次读取一次没数据，后来又有数据）
         *          8    串行化        效率低。
         *   3. 事务的回滚与不回滚   默认情况下， Spring会对所有的运行时异常进行事务回滚.
         *          rollbackFor 
         *          rollbackForClassName
         *          noRollbackFor
         *          noRollbackForClassName
         *   4. 事务的只读设置:
         *          readOnly 
         *              true:  只读     代表着只会对数据库进行读取操作， 不会有修改的操作.（只是告诉Spring而已，但是仍然可以做写操作，不建议有修改操作，如果加了这个，spring对修改是不会自动加锁了）
         *                          如果确保当前的事务只有读取操作，就有必要设置为只读，可以帮助数据库
         *                          引擎优化事务 
         *              false: 非只读   不仅会读取数据还会有修改操作。 
         *   5. 事务的超时设置:  设置事务在强制回滚之前可以占用的时间. 
         *          timeout:   秒为单位 
         *           
         */ 
```

### 4.8、使用xml的方式实现事务管理(String), 2(Long), https://picsum.photos/id/7/800/450(String), spring框架简介以及使用(String), true(Boolean), true(Boolean), true(Boolean), 10,8(String), true(Boolean), 13(Long)
2021-01-25 11:24:52.238 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.updateBlog  : <==    Updates: 1
2021-01-25 11:24:52.238 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.deleteTag   : ==>  Preparing: delete from t_blog_tags where blogs_id = ? 
2021-01-25 11:24:52.238 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.deleteTag   : ==> Parameters: 13(Long)
2021-01-25 11:24:52.240 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.BlogDao.deleteTag   : <==    Updates: 2
2021-01-25 11:24:52.240 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 11:24:52.240 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 8(Long), 13(Long)
2021-01-25 11:24:52.241 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 11:24:52.241 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==>  Preparing: insert into t_blog_tags (tags_id, blogs_id) values (?,?); 
2021-01-25 11:24:52.242 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : ==> Parameters: 10(Long), 13(Long)
2021-01-25 11:24:52.243 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.saveBlogAndTag         : <==    Updates: 1
2021-01-25 11:24:52.252 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 11:24:52.253 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 11:24:52.254 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 11:24:52.254 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 11:24:52.254 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 11:24:52.256 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 11:24:52.256 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 11:24:52.256 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 11:24:52.257 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 11:24:52.257 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 11:24:52.258 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 11:24:52.258 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 11:24:55.190  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 11:24:55.191 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:24:55.191 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 11:24:55.193 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:24:55.194 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:24:55.194 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:24:55.195 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:24:55.203  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:27:39.652  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 11:27:39.653 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:27:39.653 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 11:27:39.654 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:27:39.655 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:27:39.655 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:27:39.656 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:27:39.664  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:31:46.874  INFO 22324 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 11:31:46.876 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:31:46.876 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 11:31:46.878 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:31:46.880 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:31:46.880 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:31:46.881 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:31:46.888  INFO 22324 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 11:32:56.083  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://192.168.10.6:9090/blog/13', ip='192.168.10.5', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 11:32:56.084 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 11:32:56.084 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 11:32:56.086 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 11:32:56.086 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 11:32:56.086 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 11:32:56.087 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 11:32:56.094  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:00:56.690  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:00:56.693 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:00:56.693 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:00:56.697 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:00:56.698 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:00:56.698 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:00:56.701 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:00:56.712  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:02:52.969  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://192.168.10.6:9090/blog/13', ip='192.168.10.4', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:02:52.970 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:02:52.970 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:02:52.972 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:02:52.972 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:02:52.973 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:02:52.973 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:02:52.979  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:16:28.167  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:16:28.169 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:16:28.169 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:16:28.173 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:16:28.174 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:16:28.174 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:16:28.177 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:16:28.183  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:21:45.177  INFO 22324 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:21:45.179 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:21:45.179 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:21:45.181 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:21:45.181 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:21:45.182 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:21:45.182 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:21:45.188  INFO 22324 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:21:50.311  INFO 22324 --- [http-nio-9090-exec-7] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:21:50.312 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:21:50.312 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:21:50.313 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:21:50.314 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:21:50.314 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:21:50.315 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:21:50.320  INFO 22324 --- [http-nio-9090-exec-7] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:21:56.926  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 12:21:56.984 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 12:21:56.985 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 12:21:56.986 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 12:21:56.986 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 12:21:56.986 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:21:56.988 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 12:21:56.988 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 12:21:56.988 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 12:21:56.990 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 12:21:56.990 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 12:21:56.990 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 12:21:56.992 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 12:21:56.993 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 12:21:56.993 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 12:21:56.994 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 12:21:56.994  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 12:21:58.627  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:21:58.628 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:21:58.628 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:21:58.630 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:21:58.631 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:21:58.631 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:21:58.632 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:21:58.641  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:22:33.770  INFO 22324 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-01-25 12:22:33.770  INFO 22324 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 12:22:33.774  INFO 22324 --- [Thread-13] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2021-01-25 12:22:33.781  INFO 22324 --- [Thread-13] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2021-01-25 12:22:35.686  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 22324 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 12:22:35.687 DEBUG 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 12:22:35.687  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 12:22:36.158  INFO 22324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 12:22:36.185  INFO 22324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2021-01-25 12:22:36.339  INFO 22324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4993076] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 12:22:36.695  INFO 22324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 12:22:36.696  INFO 22324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 12:22:36.697  INFO 22324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 12:22:36.738  INFO 22324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 12:22:36.738  INFO 22324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1047 ms
2021-01-25 12:22:36.846  INFO 22324 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2021-01-25 12:22:36.852  INFO 22324 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2021-01-25 12:22:36.876  INFO 22324 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 12:22:37.000  INFO 22324 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 12:22:37.024  INFO 22324 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 12:22:37.583  INFO 22324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 12:22:37.612  WARN 22324 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 12:22:37.733  INFO 22324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 12:22:38.074  INFO 22324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 12:22:38.119  INFO 22324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 12:22:38.120  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 2.508 seconds (JVM running for 4110.237)
2021-01-25 12:22:38.123  INFO 22324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-01-25 12:22:50.114  INFO 22324 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 12:22:50.115  INFO 22324 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 12:22:50.131  INFO 22324 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2021-01-25 12:22:50.141  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 12:22:50.147 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 12:22:50.147 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 12:22:50.148 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 12:22:50.148 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 12:22:50.149 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:22:50.151 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 12:22:50.155 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 12:22:50.155 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 12:22:50.158 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 12:22:50.160 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 12:22:50.160 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 12:22:50.162 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 12:22:50.162 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 12:22:50.163 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 12:22:50.164 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 12:22:50.164  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 12:22:52.081  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:22:52.083 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:22:52.083 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:22:52.088 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:22:52.089 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:22:52.089 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:22:52.090 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:22:52.091 DEBUG 22324 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:22:52.091 DEBUG 22324 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:22:52.093 DEBUG 22324 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:22:52.103  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:22:54.994  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:22:54.995 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:22:54.996 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:22:54.997 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:22:54.997 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:22:54.997 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:22:54.998 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:22:54.999 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:22:54.999 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:22:55.000 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:22:55.005  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:22:57.743  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:22:57.744 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:22:57.744 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:22:57.745 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:22:57.746 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:22:57.746 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:22:57.747 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:22:57.747 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:22:57.747 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:22:57.748 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:22:57.753  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:00.660  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:23:00.661 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:00.661 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:23:00.663 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:00.664 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:00.664 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:23:00.665 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:00.665 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:00.665 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:23:00.666 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:00.671  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:03.599  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:23:03.600 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:03.600 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:23:03.602 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:03.602 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:03.603 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:23:03.604 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:03.604 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:03.604 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:23:03.605 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:03.611  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:07.435  INFO 22324 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/18', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[18, {}]}
2021-01-25 12:23:07.436 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:07.437 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 18(Long)
2021-01-25 12:23:07.438 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:07.439 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:07.439 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 12:23:07.440 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:07.441 DEBUG 22324 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:07.441 DEBUG 22324 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 18(Long)
2021-01-25 12:23:07.442 DEBUG 22324 --- [http-nio-9090-exec-4] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:07.442  INFO 22324 --- [http-nio-9090-exec-4] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:09.799  INFO 22324 --- [http-nio-9090-exec-7] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/18', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[18, {}]}
2021-01-25 12:23:09.800 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:09.800 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 18(Long)
2021-01-25 12:23:09.801 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:09.802 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:09.802 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 12:23:09.803 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:09.804 DEBUG 22324 --- [http-nio-9090-exec-7] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:09.804 DEBUG 22324 --- [http-nio-9090-exec-7] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 18(Long)
2021-01-25 12:23:09.805 DEBUG 22324 --- [http-nio-9090-exec-7] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:09.805  INFO 22324 --- [http-nio-9090-exec-7] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:11.930  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/18', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[18, {}]}
2021-01-25 12:23:11.931 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:11.931 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 18(Long)
2021-01-25 12:23:11.933 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:11.934 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:11.934 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 12:23:11.935 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:11.935 DEBUG 22324 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:11.936 DEBUG 22324 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 18(Long)
2021-01-25 12:23:11.937 DEBUG 22324 --- [http-nio-9090-exec-5] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:11.938  INFO 22324 --- [http-nio-9090-exec-5] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:14.733  INFO 22324 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[14, {}]}
2021-01-25 12:23:14.733 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:14.734 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 14(Long)
2021-01-25 12:23:14.734 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:14.735 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:14.735 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 12:23:14.736 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:14.737 DEBUG 22324 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:14.737 DEBUG 22324 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 14(Long)
2021-01-25 12:23:14.738 DEBUG 22324 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:14.739  INFO 22324 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:17.289  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[14, {}]}
2021-01-25 12:23:17.290 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:17.290 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 14(Long)
2021-01-25 12:23:17.291 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:17.291 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:17.292 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 12:23:17.292 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:17.293 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:17.293 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 14(Long)
2021-01-25 12:23:17.294 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:17.294  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:21.184  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/14', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[14, {}]}
2021-01-25 12:23:21.185 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:21.185 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 14(Long)
2021-01-25 12:23:21.187 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:21.188 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:21.188 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 10(Long)
2021-01-25 12:23:21.189 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:21.189 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:21.189 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 14(Long)
2021-01-25 12:23:21.190 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:21.191  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:25.128  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:23:25.128 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:25.129 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:23:25.130 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:25.131 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:25.131 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:23:25.132 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:25.132 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:25.132 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:23:25.133 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:25.139  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:23:51.464  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 12:23:51.465 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 12:23:51.465 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 12:23:51.466 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 12:23:51.466 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 12:23:51.467 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:23:51.468 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 12:23:51.468 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 12:23:51.468 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 12:23:51.469 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 12:23:51.470 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 12:23:51.470 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 12:23:51.472 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 12:23:51.472 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 12:23:51.472 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 12:23:51.473 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 12:23:51.474  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 12:23:57.858  INFO 22324 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:23:57.859 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:23:57.859 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:23:57.861 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:23:57.861 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:23:57.862 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:23:57.863 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:23:57.863 DEBUG 22324 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:23:57.864 DEBUG 22324 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:23:57.865 DEBUG 22324 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:23:57.870  INFO 22324 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:24:01.460  INFO 22324 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/13', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:24:01.461 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:24:01.461 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:24:01.462 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:24:01.463 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:24:01.463 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:24:01.464 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:24:01.464 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:24:01.464 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:24:01.465 DEBUG 22324 --- [http-nio-9090-exec-2] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:24:01.472  INFO 22324 --- [http-nio-9090-exec-2] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:24:57.615  INFO 22324 --- [Thread-21] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-01-25 12:24:57.616  INFO 22324 --- [Thread-21] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 12:24:57.616  INFO 22324 --- [Thread-21] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2021-01-25 12:24:57.622  INFO 22324 --- [Thread-21] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2021-01-25 12:24:58.519  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Starting SearchallApplication on DESKTOP-5T5LE5R with PID 22324 (D:\Ideal-workspace\searchall\target\classes started by wanghan in D:\Ideal-workspace\searchall)
2021-01-25 12:24:58.519 DEBUG 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2021-01-25 12:24:58.519  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : The following profiles are active: dev
2021-01-25 12:24:58.736  INFO 22324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-25 12:24:58.746  INFO 22324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2021-01-25 12:24:58.795  INFO 22324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4993076] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-25 12:24:58.919  INFO 22324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9090 (http)
2021-01-25 12:24:58.920  INFO 22324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-01-25 12:24:58.921  INFO 22324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2021-01-25 12:24:58.950  INFO 22324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-01-25 12:24:58.950  INFO 22324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 429 ms
2021-01-25 12:24:59.032  INFO 22324 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2021-01-25 12:24:59.038  INFO 22324 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2021-01-25 12:24:59.053  INFO 22324 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2021-01-25 12:24:59.177  INFO 22324 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-01-25 12:24:59.198  INFO 22324 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-25 12:24:59.562  INFO 22324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-01-25 12:24:59.583  WARN 22324 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-25 12:24:59.699  INFO 22324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-01-25 12:25:00.116  INFO 22324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-01-25 12:25:00.175  INFO 22324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''
2021-01-25 12:25:00.176  INFO 22324 --- [restartedMain] com.wh.searchall.SearchallApplication    : Started SearchallApplication in 1.691 seconds (JVM running for 4252.293)
2021-01-25 12:25:00.188  INFO 22324 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-01-25 12:25:00.183  INFO 22324 --- [http-nio-9090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-25 12:25:00.189  INFO 22324 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-01-25 12:25:00.206  INFO 22324 --- [http-nio-9090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2021-01-25 12:25:00.215  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='127.0.0.1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 12:25:00.228 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 12:25:00.229 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 12:25:00.235 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 12:25:00.235 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 12:25:00.235 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:25:00.240 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 12:25:00.245 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 12:25:00.245 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 12:25:00.248 DEBUG 22324 --- [http-nio-9090-exec-1] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 12:25:00.253 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 12:25:00.253 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 12:25:00.258 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 12:25:00.259 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 12:25:00.259 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 12:25:00.260 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 12:25:00.262  INFO 22324 --- [http-nio-9090-exec-1] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 12:25:04.094  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='127.0.0.1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 12:25:04.096 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 12:25:04.096 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 12:25:04.097 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 12:25:04.097 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 12:25:04.097 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:25:04.100 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 12:25:04.101 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 12:25:04.102 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 12:25:04.102 DEBUG 22324 --- [http-nio-9090-exec-10] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 12:25:04.103 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 12:25:04.103 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 12:25:04.105 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 12:25:04.105 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 12:25:04.106 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 12:25:04.107 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 12:25:04.107  INFO 22324 --- [http-nio-9090-exec-10] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 12:25:38.453 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 12:25:38.454 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 12:25:38.454 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 12:25:40.035 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:25:40.035 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:25:40.035 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:25:40.036 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:25:40.036 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:25:40.037 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:25:40.038 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:25:40.038 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:25:40.038 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:25:40.039 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:25:40.039 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:25:40.041 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:25:42.808 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND recommend = ? 
2021-01-25 12:25:42.808 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: true(Boolean)
2021-01-25 12:25:42.809 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 12:25:42.809 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.listBlog    : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and recommend = ? order by update_time desc LIMIT ? 
2021-01-25 12:25:42.809 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.listBlog    : ==> Parameters: true(Boolean), 8(Integer)
2021-01-25 12:25:42.811 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.listBlog    : <==      Total: 5
2021-01-25 12:25:42.811 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:25:42.811 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:25:42.812 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:25:42.812 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:25:42.812 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:25:42.813 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:25:55.284 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 12:25:55.284 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 12:25:55.285 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 12:25:56.996 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:25:56.996 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:25:56.997 DEBUG 22324 --- [http-nio-9090-exec-5] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:25:56.997 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:25:56.997 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:25:56.998 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:25:56.998 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:25:56.998 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:25:56.998 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:25:56.999 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:25:56.999 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:25:56.999 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:26:00.335 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND recommend = ? 
2021-01-25 12:26:00.336 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: true(Boolean)
2021-01-25 12:26:00.336 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 12:26:00.337 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.listBlog    : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and recommend = ? order by update_time desc LIMIT ? 
2021-01-25 12:26:00.337 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.listBlog    : ==> Parameters: true(Boolean), 8(Integer)
2021-01-25 12:26:00.338 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.listBlog    : <==      Total: 5
2021-01-25 12:26:00.338 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:26:00.338 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:26:00.339 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:26:00.339 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:26:00.339 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:26:00.340 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:26:05.483 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND type_id = ? AND recommend = ? 
2021-01-25 12:26:05.483 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: 1(Long), true(Boolean)
2021-01-25 12:26:05.484 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 12:26:05.484 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.listBlog    : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and type_id = ? and recommend = ? order by update_time desc LIMIT ? 
2021-01-25 12:26:05.484 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.listBlog    : ==> Parameters: 1(Long), true(Boolean), 8(Integer)
2021-01-25 12:26:05.485 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.listBlog    : <==      Total: 4
2021-01-25 12:26:05.486 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:26:05.486 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:26:05.486 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:26:05.487 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:26:05.487 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:26:05.487 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:26:12.517 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND title LIKE concat('%', ?, '%') AND recommend = ? 
2021-01-25 12:26:12.518 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: SpringMVC(String), true(Boolean)
2021-01-25 12:26:12.519 DEBUG 22324 --- [http-nio-9090-exec-7] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 12:26:12.519 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:26:12.519 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:26:12.519 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:26:12.520 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:26:12.520 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:26:12.520 DEBUG 22324 --- [http-nio-9090-exec-7] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:26:14.156 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.listBlog_COUNT         : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id AND title LIKE concat('%', ?, '%') AND recommend = ? 
2021-01-25 12:26:14.156 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.listBlog_COUNT         : ==> Parameters: SpringMVC(String), false(Boolean)
2021-01-25 12:26:14.157 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.listBlog_COUNT         : <==      Total: 1
2021-01-25 12:26:14.157 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.listBlog    : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t WHERE b.type_id = t.id and title like concat('%',?,'%') and recommend = ? order by update_time desc LIMIT ? 
2021-01-25 12:26:14.157 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.listBlog    : ==> Parameters: SpringMVC(String), false(Boolean), 8(Integer)
2021-01-25 12:26:14.158 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.listBlog    : <==      Total: 1
2021-01-25 12:26:14.159 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:26:14.159 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:26:14.159 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:26:14.160 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:26:14.160 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:26:14.160 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:26:22.764 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:26:22.765 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:26:22.765 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:26:22.766 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:26:22.766 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:26:22.766 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:26:42.068 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:26:42.068 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:26:42.069 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:26:42.069 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:26:42.070 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:26:42.071 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:26:42.071 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:26:42.072 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:26:42.072 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:26:42.072 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:26:42.073 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:26:42.073 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:27:54.605 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:27:54.606 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:27:54.606 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:27:54.607 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:27:54.607 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:27:54.608 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:27:54.608 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:27:54.608 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:27:54.609 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:27:54.609 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:27:54.609 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:27:54.610 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:02.873 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 12:28:02.873 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 12:28:02.874 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 12:28:04.031 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:28:04.031 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:28:04.032 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:28:04.032 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:28:04.032 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:28:04.033 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:28:04.033 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:04.033 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:04.034 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:04.034 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:04.034 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:04.035 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:12.203 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.TypeDao.getAllType_COUNT       : ==>  Preparing: SELECT count(0) FROM t_type 
2021-01-25 12:28:12.204 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.TypeDao.getAllType_COUNT       : ==> Parameters: 
2021-01-25 12:28:12.204 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.TypeDao.getAllType_COUNT       : <==      Total: 1
2021-01-25 12:28:12.205 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type LIMIT ? 
2021-01-25 12:28:12.206 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 5(Integer)
2021-01-25 12:28:12.207 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:13.002 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:28:13.002 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:28:13.003 DEBUG 22324 --- [http-nio-9090-exec-10] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:28:13.003 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:28:13.003 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:28:13.004 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:28:13.005 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:13.005 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:13.005 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:13.005 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:13.006 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:13.006 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:16.755 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:16.756 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:16.756 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:16.757 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:16.757 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:16.757 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:18.039 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:18.039 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:18.040 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:18.040 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:18.040 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:18.041 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:20.689 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:20.690 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:20.690 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:20.691 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:20.691 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:20.692 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:22.354 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:28:22.354 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:28:22.354 DEBUG 22324 --- [http-nio-9090-exec-1] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:28:22.355 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:28:22.355 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:28:22.356 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:28:22.356 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:22.356 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:22.357 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:22.357 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:22.357 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:22.358 DEBUG 22324 --- [http-nio-9090-exec-1] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:28:24.510 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:28:24.510 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:28:24.511 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:28:24.511 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:28:24.511 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:28:24.512 DEBUG 22324 --- [http-nio-9090-exec-10] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:13.800 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:13.801 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:13.802 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:13.802 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:13.802 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:13.803 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:20.284 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.d.U.queryByUsernameAndPassword     : ==>  Preparing: select * from t_user where username = ? and password = ?; 
2021-01-25 12:29:20.285 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.d.U.queryByUsernameAndPassword     : ==> Parameters: wanghan(String), 96e79218965eb72c92a549dd5a330112(String)
2021-01-25 12:29:20.286 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.d.U.queryByUsernameAndPassword     : <==      Total: 1
2021-01-25 12:29:21.810 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:29:21.811 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:29:21.812 DEBUG 22324 --- [http-nio-9090-exec-2] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:29:21.812 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:29:21.812 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:29:21.813 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:29:21.814 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:21.814 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:21.815 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:21.815 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:21.816 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:21.816 DEBUG 22324 --- [http-nio-9090-exec-2] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:26.625 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:26.625 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:26.626 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:26.626 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:26.626 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:26.627 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:28.511 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:29:28.511 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:29:28.511 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:29:28.512 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:29:28.512 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:29:28.513 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:29:28.514 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:28.514 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:28.515 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:28.515 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:28.515 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:28.515 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:29.517 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:29.518 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:29.518 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:29.519 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:29.519 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:29.519 DEBUG 22324 --- [http-nio-9090-exec-5] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:30.657 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:29:30.658 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:29:30.658 DEBUG 22324 --- [http-nio-9090-exec-4] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:29:30.658 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:29:30.658 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:29:30.659 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:29:30.660 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:30.660 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:30.660 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:30.660 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:30.661 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:30.661 DEBUG 22324 --- [http-nio-9090-exec-4] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:33.133 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : ==>  Preparing: SELECT count(0) FROM t_type 
2021-01-25 12:29:33.133 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : ==> Parameters: 
2021-01-25 12:29:33.134 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : <==      Total: 1
2021-01-25 12:29:33.134 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type LIMIT ? 
2021-01-25 12:29:33.135 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 5(Integer)
2021-01-25 12:29:33.135 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:34.117 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : ==>  Preparing: SELECT count(0) FROM t_tag 
2021-01-25 12:29:34.117 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : ==> Parameters: 
2021-01-25 12:29:34.117 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : <==      Total: 1
2021-01-25 12:29:34.118 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag LIMIT ? 
2021-01-25 12:29:34.118 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 5(Integer)
2021-01-25 12:29:34.118 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:34.979 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : ==>  Preparing: SELECT count(0) FROM t_type 
2021-01-25 12:29:34.979 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : ==> Parameters: 
2021-01-25 12:29:34.980 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : <==      Total: 1
2021-01-25 12:29:34.980 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type LIMIT ? 
2021-01-25 12:29:34.980 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 5(Integer)
2021-01-25 12:29:34.981 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:36.974 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : ==>  Preparing: SELECT count(0) FROM t_type 
2021-01-25 12:29:36.974 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : ==> Parameters: 
2021-01-25 12:29:36.974 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TypeDao.getAllType_COUNT       : <==      Total: 1
2021-01-25 12:29:36.975 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type LIMIT ? 
2021-01-25 12:29:36.975 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 5(Integer)
2021-01-25 12:29:36.975 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:38.095 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : ==>  Preparing: SELECT count(0) FROM t_tag 
2021-01-25 12:29:38.095 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : ==> Parameters: 
2021-01-25 12:29:38.096 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : <==      Total: 1
2021-01-25 12:29:38.096 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag LIMIT ? 
2021-01-25 12:29:38.096 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 5(Integer)
2021-01-25 12:29:38.097 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:40.259 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : ==>  Preparing: SELECT count(0) FROM t_tag 
2021-01-25 12:29:40.259 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : ==> Parameters: 
2021-01-25 12:29:40.259 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.TagDao.getAllTag_COUNT         : <==      Total: 1
2021-01-25 12:29:40.260 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag LIMIT ? 
2021-01-25 12:29:40.260 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 5(Integer)
2021-01-25 12:29:40.260 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:45.070 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2021-01-25 12:29:45.070 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : ==> Parameters: 
2021-01-25 12:29:45.071 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getAllBlog_COUNT       : <==      Total: 1
2021-01-25 12:29:45.071 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==>  Preparing: select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published, t.id `type.id`, t.name `type.name` from t_blog b, t_type t where b.type_id = t.id order by update_time desc LIMIT ? 
2021-01-25 12:29:45.071 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:29:45.073 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.BlogDao.getAllBlog  : <==      Total: 8
2021-01-25 12:29:45.074 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type 
2021-01-25 12:29:45.074 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 
2021-01-25 12:29:45.074 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:45.075 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag 
2021-01-25 12:29:45.075 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 
2021-01-25 12:29:45.075 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:29:45.973 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.TypeDao.getAllType_COUNT       : ==>  Preparing: SELECT count(0) FROM t_type 
2021-01-25 12:29:45.973 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.TypeDao.getAllType_COUNT       : ==> Parameters: 
2021-01-25 12:29:45.973 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.TypeDao.getAllType_COUNT       : <==      Total: 1
2021-01-25 12:29:45.974 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==>  Preparing: select * from t_type LIMIT ? 
2021-01-25 12:29:45.974 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : ==> Parameters: 5(Integer)
2021-01-25 12:29:45.975 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TypeDao.getAllType  : <==      Total: 4
2021-01-25 12:29:46.456 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.TagDao.getAllTag_COUNT         : ==>  Preparing: SELECT count(0) FROM t_tag 
2021-01-25 12:29:46.456 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.TagDao.getAllTag_COUNT         : ==> Parameters: 
2021-01-25 12:29:46.456 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.TagDao.getAllTag_COUNT         : <==      Total: 1
2021-01-25 12:29:46.456 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==>  Preparing: select * from t_tag LIMIT ? 
2021-01-25 12:29:46.456 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : ==> Parameters: 5(Integer)
2021-01-25 12:29:46.456 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getAllTag    : <==      Total: 4
2021-01-25 12:30:04.552  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.index', args=[1, {}]}
2021-01-25 12:30:04.553 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND published = true 
2021-01-25 12:30:04.553 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : ==> Parameters: 
2021-01-25 12:30:04.554 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getIndexBlog_COUNT     : <==      Total: 1
2021-01-25 12:30:04.555 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name `type.name`, t.id `type.id`, u.nickname `user.nickname`, u.avatar `user.avatar`, u.id `user.id` from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and published = true order by b.update_time desc LIMIT ? 
2021-01-25 12:30:04.555 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : ==> Parameters: 8(Integer)
2021-01-25 12:30:04.556 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.BlogDao.getIndexBlog  : <==      Total: 8
2021-01-25 12:30:04.556 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2021-01-25 12:30:04.556 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : ==> Parameters: 
2021-01-25 12:30:04.557 DEBUG 22324 --- [http-nio-9090-exec-8] c.wh.searchall.dao.TypeDao.getBlogType   : <==      Total: 9
2021-01-25 12:30:04.558 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tags_id and b.id = bt.blogs_id 
2021-01-25 12:30:04.558 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : ==> Parameters: 
2021-01-25 12:30:04.559 DEBUG 22324 --- [http-nio-9090-exec-8] com.wh.searchall.dao.TagDao.getBlogTag   : <==      Total: 16
2021-01-25 12:30:04.559 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==>  Preparing: select id, title, recommend from t_blog where published = true and recommend = true order by update_time desc; 
2021-01-25 12:30:04.559 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : ==> Parameters: 
2021-01-25 12:30:04.560 DEBUG 22324 --- [http-nio-9090-exec-8] c.w.s.dao.BlogDao.getAllRecommendBlog    : <==      Total: 5
2021-01-25 12:30:04.561  INFO 22324 --- [http-nio-9090-exec-8] com.wh.searchall.aspect.LogAspect        : Result : index
2021-01-25 12:30:09.733  INFO 22324 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/4', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[4, {}]}
2021-01-25 12:30:09.736 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:30:09.736 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 4(Long)
2021-01-25 12:30:09.737 DEBUG 22324 --- [http-nio-9090-exec-6] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:30:09.738 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? , ? ) 
2021-01-25 12:30:09.738 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 8(Long), 11(Long)
2021-01-25 12:30:09.739 DEBUG 22324 --- [http-nio-9090-exec-6] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 3
2021-01-25 12:30:09.739 DEBUG 22324 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:30:09.739 DEBUG 22324 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 4(Long)
2021-01-25 12:30:09.740 DEBUG 22324 --- [http-nio-9090-exec-6] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:30:09.743  INFO 22324 --- [http-nio-9090-exec-6] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:30:20.985  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Request : {url='http://localhost:9090/blog/4', ip='0:0:0:0:0:0:0:1', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[4, {}]}
2021-01-25 12:30:20.986 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:30:20.987 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 4(Long)
2021-01-25 12:30:20.988 DEBUG 22324 --- [http-nio-9090-exec-9] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:30:20.988 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? , ? ) 
2021-01-25 12:30:20.988 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 9(Long), 8(Long), 11(Long)
2021-01-25 12:30:20.989 DEBUG 22324 --- [http-nio-9090-exec-9] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 3
2021-01-25 12:30:20.989 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:30:20.989 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 4(Long)
2021-01-25 12:30:20.990 DEBUG 22324 --- [http-nio-9090-exec-9] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:30:20.993  INFO 22324 --- [http-nio-9090-exec-9] com.wh.searchall.aspect.LogAspect        : Result : blog
2021-01-25 12:58:31.389  INFO 22324 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Request : {url='http://192.168.10.6:9090/blog/13', ip='192.168.10.5', classMethod='com.wh.searchall.web.IndexController.toLogin', args=[13, {}]}
2021-01-25 12:58:31.391 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : ==>  Preparing: select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentable, b.share_statement, b.appreciation, b.tag_ids, u.nickname `user.nickname`, u.avatar `user.avatar`,u.id `user.id`, t.name `type.name`, t.id `type.id` from t_blog b, t_user u, t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-01-25 12:58:31.391 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : ==> Parameters: 13(Long)
2021-01-25 12:58:31.392 DEBUG 22324 --- [http-nio-9090-exec-3] c.w.s.dao.BlogDao.getDetailedBlog        : <==      Total: 1
2021-01-25 12:58:31.393 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==>  Preparing: select * from t_tag where id in ( ? , ? ) 
2021-01-25 12:58:31.393 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : ==> Parameters: 10(Long), 8(Long)
2021-01-25 12:58:31.393 DEBUG 22324 --- [http-nio-9090-exec-3] com.wh.searchall.dao.TagDao.findAll      : <==      Total: 2
2021-01-25 12:58:31.394 DEBUG 22324 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.updateViews   : ==>  Preparing: update t_blog set views = views + 1 where id = ?; 
2021-01-25 12:58:31.394 DEBUG 22324 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.updateViews   : ==> Parameters: 13(Long)
2021-01-25 12:58:31.395 DEBUG 22324 --- [http-nio-9090-exec-3] c.wh.searchall.dao.BlogDao.updateViews   : <==    Updates: 1
2021-01-25 12:58:31.399  INFO 22324 --- [http-nio-9090-exec-3] com.wh.searchall.aspect.LogAspect        : Result : blog
